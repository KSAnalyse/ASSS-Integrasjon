<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/6/2022 10:35:54 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="VK-C0D1E-046"
  DTS:CreatorName="I04\vk300"
  DTS:DTSID="{1174FE2D-A35C-4EA6-BC40-B3C4000BD557}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1044"
  DTS:ObjectName="Export"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="112"
  DTS:VersionGUID="{2AF8D6BC-7E44-47FA-AE9D-F95D38ED9E7D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{98D578E7-5B0F-433B-B87E-4E9A32B7EB65}"
      DTS:ObjectName="Tjenesteområde">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{CADFCCDE-D399-4609-A2A9-BC13F479711B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_2c06108eedda456bbcd33421f27ea91f"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::Tjenesteområde">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2c06108eedda456bbcd33421f27ea91f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2c06108eedda456bbcd33421f27ea91f")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using Excel = Microsoft.Office.Interop.Excel;
using DataTable = System.Data.DataTable;
#endregion

namespace ST_2c06108eedda456bbcd33421f27ea91f
{

	/// <summary>
	/// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
	/// or parent of this class.
	/// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
			createExcelFiles(getGroupData());
			Dts.TaskResult = (int)ScriptResults.Success;
		}

		public DataTable getGroupData()
		{
			Boolean fireAgain = false;
			string sqlConnectionString = @"Data Source=vk-sxd0e-002;Initial Catalog=Staging_ASSS;Integrated Security=true";
			string selectString = "select * from [dbo].[Tabellgrupper] order by [Gruppe], [Tabellnummer]";

			Dts.Events.FireInformation(0, "Current group", Dts.Variables["$Package::Tjenesteområde"].Value.ToString(), String.Empty, 0, ref fireAgain);

			if (!Dts.Variables["$Package::Tjenesteområde"].Value.Equals("")) {
				selectString = String.Format("select * from [dbo].[Tabellgrupper] where [Gruppe] = '{0}' order by [Gruppe], [Tabellnummer]", Dts.Variables["$Package::Tjenesteområde"].Value);
			}

			DataTable dt = new System.Data.DataTable();

			using (SqlConnection connection = new SqlConnection(sqlConnectionString))
			{
				connection.Open();
				using (SqlCommand command = new SqlCommand(selectString, connection))
				{
					SqlDataAdapter da = new SqlDataAdapter(command);
					da.Fill(dt);
					da.Dispose();
				}
				connection.Close();
			}

			return dt;
		}

		public void createExcelFiles(DataTable tableOverview)
		{
			DataTable dt;
			Excel.Worksheet sheet = null;
			bool fireAgain = false;
			Excel.Application excel = new Excel.Application();
			excel.DisplayAlerts = false;

			Excel.Workbook xlWb = excel.Workbooks.Add();
			//Excel.Workbook xlWb = excel.Workbooks.Open(@"\\vk-sxd0e-002\ASSS\Datadump\Barnehage.xlsx");
			String currentGroup = tableOverview.Rows[0]["Gruppe"].ToString();
			int count = 1;

			
			foreach (DataRow row in tableOverview.Rows)
			{
				Dts.Events.FireInformation(0, "Current table", row["Tabellnummer"].ToString(), String.Empty, 0, ref fireAgain);
				if (!row["Gruppe"].ToString().Equals(currentGroup))
				{
					//xlWb.Sheets[count].Delete();
					sheet.Delete();
					//xlWb.SaveAs(@"\\vk-sxd0e-002\ASSS\Datadump\" + currentGroup);
					xlWb.Close();

					if (!row["Gruppe"].ToString().Equals(currentGroup))
						xlWb = excel.Workbooks.Add();

					currentGroup = row["Gruppe"].ToString();
					count = 1;
				}

				sheet = xlWb.Sheets.Add(xlWb.Sheets[count]);
				sheet.Name = row["Tabellnummer"].ToString();

				//sheet.Delete();

				//Build worksheets
				//if (row["Kildeid"].ToString().Equals("SSB"))
				//{
					int columnNum = 1;
					dt = fetchTableData(row["Kildeid"].ToString() + "_" + row["Tabellnummer"].ToString());

					int rowSize = dt.Rows.Count;
					int columnSize = dt.Columns.Count;

				Dts.Events.FireInformation(0, row["Tabellnummer"].ToString(), "Starting", String.Empty, 0, ref fireAgain);

				foreach (DataColumn column in dt.Columns)
					{
						
						//Dts.Events.FireInformation(0, column.ColumnName, "Type: " + column.DataType.ToString(), String.Empty, 0, ref fireAgain);
						sheet.Cells[1, columnNum++] = column.ColumnName;
					}
				//MessageBox.Show("rows: " + dt.Rows.Count.ToString() + " columns: " + dt.Columns.Count.ToString());
				//sheet.Cells[2, 1] = dt.Rows[1][0];
				var data = new object[dt.Rows.Count, dt.Columns.Count];

				Dts.Events.FireInformation(0, row["Tabellnummer"].ToString(), "Rows: " + dt.Rows.Count + " Columns: " + dt.Columns.Count, String.Empty, 0, ref fireAgain);
				for (int i = 0; i < dt.Rows.Count; i++)
				{
					for (int j = 0; j < dt.Columns.Count; j++)
					{
						if (dt.Columns[j].DataType.ToString().Equals("System.String"))
						{
							data[i, j] = "'" + dt.Rows[i][j];
							//sheet.Cells[i + 2, j + 1] = "'" + dt.Rows[i][j];
						}
						else
						{
							data[i, j] = dt.Rows[i][j];
							//sheet.Cells[i + 2, j + 1] = dt.Rows[i][j];
						}
					}
				}
					/*
					if (row["Tabellnummer"].ToString().Equals("12056"))
						Dts.Events.FireInformation(0, "Row", i.ToString(), String.Empty, 0, ref fireAgain);
					}
					*/

				var startCell = (Excel.Range)sheet.Cells[2, 1];
				var endCell = (Excel.Range)sheet.Cells[dt.Rows.Count, dt.Columns.Count];
				var writeRange = sheet.Range[startCell, endCell];

				Dts.Events.FireInformation(0, row["Tabellnummer"].ToString(), "Writing range", String.Empty, 0, ref fireAgain);
				writeRange.Value2 = data;

				//}
				xlWb.SaveAs(@"\\vk-sxd0e-002\ASSS\Datadump\" + currentGroup);
				//sheet.Delete();
				count++;
				//break;
			}

			//xlWb.SaveAs(@"\\vk-sxd0e-002\ASSS\Datadump\" + currentGroup);
			sheet.Delete();
			xlWb.Close();
			excel.Quit();

			/*
			Excel.Workbook wb = excel.Workbooks.Open(@"\\vk-sxd0e-002\ASSS\Datadump\Barnehage.xlsx");
			excel.DisplayAlerts = false;
			excel.Visible = false;

			foreach (Excel.Worksheet sheet in wb.Sheets)
			{
				//if (sheet.Name == "09345")
				//{
				try
				{
					String sheetName = sheet.Name;
					int usedColumns = sheet.UsedRange.Columns.Count;

					Excel.Worksheet newSheet = (Excel.Worksheet)wb.Worksheets.Add(sheet);


					for (int i = 1; i < usedColumns + 1; i++)
					{
						newSheet.Cells[1, i] = sheet.Cells[1, i];
					}

					sheet.Delete();
					newSheet.Name = sheetName;

				}
				catch (Exception e)
				{
					MessageBox.Show(e.ToString());
				}
				//}
			}


			wb.Save();
			wb.Close();
			excel.Quit();
			*/
		}

		public DataTable fetchTableData(String tableName)
		{
			string sqlConnectionString = @"Data Source=vk-sxd0e-002;Initial Catalog=Staging_ASSS;Integrated Security=true";
			string selectString = "select * from [dbo].[" + tableName + "]";

			DataTable dt = new System.Data.DataTable();

			using (SqlConnection connection = new SqlConnection(sqlConnectionString))
			{
				connection.Open();
				using (SqlCommand command = new SqlCommand(selectString, connection))
				{
					SqlDataAdapter da = new SqlDataAdapter(command);
					da.Fill(dt);
					da.Dispose();
				}
				connection.Close();
			}

			return dt;
		}

		/*public void writeToTable()
		{
			string deleteString = "DELETE FROM [dbo].[KS_BHG02 Foreldreunders�kelsen i barnehage] WHERE Tid = '2020'";
			string destinationTable = "[dbo].[KS_BHG02 Foreldreunders�kelsen i barnehage]";
			string insertString = "INSERT INTO " + destinationTable + " (Regionkode, Statistikkvariabelnavn, Kilde, Verdi, Tid) VALUES (@param1, @param2, @param3, @param4, @param5)";
			string sqlConnectionString = @"Data Source=vk-sxd0e-003;Initial Catalog=TEST_Staging_ASSS;Integrated Security=true";
			DataTable dt = new DataTable();

			dt.Columns.AddRange(new DataColumn[5]
			{
			new DataColumn("Regionkode", typeof(string)),
			new DataColumn("Statistikkvariabelnavn", typeof(string)),
			new DataColumn("Kilde", typeof(string)),
			new DataColumn("Verdi", typeof(decimal)),
			new DataColumn("Tid", typeof(string))
			});

			DataRow row;

			foreach (Data data in datas)
			{
				row = dt.NewRow();
				row["Regionkode"] = data.Kommunenummer;
				row["Statistikkvariabelnavn"] = data.Variabelnavn;
				row["Kilde"] = data.Kilde;
				if (data.Verdi == 0)
				{
					row["Verdi"] = Convert.DBNull;
				}
				else
				{
					row["Verdi"] = data.Verdi;
				}
				row["Tid"] = data.�r;
				dt.Rows.Add(row);
			}

			using (SqlConnection connection = new SqlConnection(sqlConnectionString))
			{
				connection.Open();
				using (SqlCommand command = new SqlCommand(deleteString, connection))
				{
					command.ExecuteNonQuery();
				}
				using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(connection))
				{
					sqlBulkCopy.DestinationTableName = destinationTable;
					sqlBulkCopy.WriteToServer(dt);
				}
				connection.Close();
			}
		}*/

		#region ScriptResults declaration
		/// <summary>
		/// This enum provides a convenient shorthand within the scope of this class for setting the
		/// result of the script.
		/// 
		/// This code was generated automatically.
		/// </summary>
		enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}


}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2c06108eedda456bbcd33421f27ea91f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2c06108eedda456bbcd33421f27ea91f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2c06108eedda456bbcd33421f27ea91f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2c06108eedda456bbcd33421f27ea91f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2c06108eedda456bbcd33421f27ea91f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_2c06108eedda456bbcd33421f27ea91f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_2c06108eedda456bbcd33421f27ea91f</msb:DisplayName>
    <msb:ProjectId>{7BC3C151-481B-4F5E-B6CA-27DB56F27704}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_2c06108eedda456bbcd33421f27ea91f.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2c06108eedda456bbcd33421f27ea91f.Properties.Settings.get_Default():ST_2c06108eedda456bbcd33421f27ea91f.Properties.Sett" +
    "ings")]

namespace ST_2c06108eedda456bbcd33421f27ea91f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_2c06108eedda456bbcd33421f27ea91f.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{172796FC-624D-456A-AC80-D42DBFE0DAD7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_2c06108eedda456bbcd33421f27ea91f</RootNamespace>
    <AssemblyName>ST_2c06108eedda456bbcd33421f27ea91f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <EmbedInteropTypes>True</EmbedInteropTypes>
      <HintPath>C:\Windows\assembly\GAC_MSIL\Microsoft.Office.Interop.Excel\15.0.0.0__71e9bce111e9429c\Microsoft.Office.Interop.Excel.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_2c06108eedda456bbcd33421f27ea91f.dll">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
hgCUBwYAAQBsIAAAAACGAIcBcgIBAHwhAAAAAIYAXgp3AgEASCcAAAAAhgB4AX0CAgDUJwAAAACG
GEwJBgADANwnAAAAAIMYTAkGAAMA5CcAAAAAkwjdCIMCAwAQKAAAAACTCCADiAIDABcoAAAAAJMI
LAONAgMAHygAAAAAlgiyC5MCBAAmKAAAAACGGEwJBgAEAC4oAAAAAJEYUgmYAgQAAAAAAAMABhjA
AAYABAAAAAAAgxDGDZgLnAIEAAAAAACDEMYNpQuiAgcAAAAAAAMABhj+AAYACgAAAAAAgxDGDWkA
XAAKAAAAAACDEMYNdACpAgsAAAAAAAMABhiFAAYADAAAAAAAAxDGBbgBrgIMAAAAAAADAAYYnwAG
ABEAAAAAAAMQxg2YC7YCEQAAAAAAAwAGGIUABgATAAAAAAADEMYFuAG7AhMAAAAAAAMABhjAAAYA
FQAAAAAAAxDGDaIKwQIVAAAAAAADAAYYDgAGABYAAAAAAAMQxg2YC2AAFgAAAAAAAwAGGOUABgAX
AAAAAAADEMYNNwuKARcAAAAAAAMQxg1JC8YCFwAAAAAAAwAGGAwBBgAYAAAAAAADEMYFkwsGABgA
AAAAAAMABhgBAAYAGAAAAAAAAxDGBZcDogIYAAAAAAADAAYYrAAGABsAAAAAAAMQxg3wCssCGwAA
AAAAAwAGGBoBBgAcAAAAAAADEMYFWQnQAhwAAAAAAAMABhjNAAYAKAAAAAAAAxDGBcoDBgAoAAAA
AAADAAYY2QAGACgAAAAAAAMQxg2kAmAAKAAAAAAAAxDGDa0CEAApAAAAAAADAAYYSAAGACoAAAAA
AAMQxg23CuECKgAAAAAAAwAGGPEABgArAAAAAAADEMYNOQLmAisAAAABAGMMAAABALYCAAABACUG
ACAAAAAAESABAIUMESACAHkMESABAIUMESACAHkMESADAAAAACAAAAAAASABAAAAACAAAAAAESAB
ABEDESACAAUJESADADIMESAEAAADACAAAAAAASABAIgMACAAAAAAESABAKwDACAAAAAAACAAAAAA
AQABAEEBESABABUKESACAM8CESADAJAGACAAAAAAESABAM8CESACAGsLESADAPEBESAEAOkBESAF
ALwBESAGAJUIERAHACECESAIAD8IESAJAFoMESAKACwCESALAEAMESAMAOYGACAAAAAAASABAEEB
ACAAAAAAACAAAAAAASABAEIAESACAH8ABwBIAAcAGAAKAKkACwCpAAwATAAMADgADwCpABAAUAAQ
ACQACQBMCQEAEQBMCQYAGQBMCQoAKQBMCRAAMQBMCRAAOQBMCRAAQQBMCRAASQBMCRAAUQBMCRAA
WQBMCRAAYQBMCRAAaQBMCQYAwQBMCQYA6QBMCQYACQFMCRUAGQFMCRwAIQFMCRAAKQFMCQYAOQFM
CSEAKQFMCSsAQQFMCTEASQFMCRAAWQFMCQEAYQFMCQEAcQDoCjgAaQG+CwEAaQEJC0kAaQFQCk8A
eQFoB1UAgQEbBlwAoQB1BmAAiQGbDGQAcQGxB2cAoQCwCnIAiQFvC3cAeQBMCQYAgQBMCRAAkQGJ
BwYAiQBMCX0AmQFMCYQAoQFjB4oAqQGdAwYAsQCdAwYAkQGXAwYAsQFMCRAAuQEwAbYAwQH6Ab8A
MQF+BsYAeQBbC8kAyQFoB88AmQBoB9UA0QE0CdoAkQDtC1wAiQGwCt8AMQGSAuQA4QE4DO0ADACl
AwoBDACMCxYB+QGlAxoB4QGiCCQBFAClAwoBFACMCxYBHABOAlsBJABOAnABiQFkC3kB0QEuDIAB
eQDBCoQBqQDAAmAAkQBRDIoBLABMCZYBiQFkC5wBGQJoB6IBqQD4AqgBmQBoB64BiQFkC7MBLAB9
C7kBNAClAwoBNACMCxYBPABOAnABiQFkC9gBcQBMCQYAoQBMCQYAMQGODOgB8QBMCe4BEQFMCQYA
CAAUABECCAAYABYCCAAcABsCCAAkACACCAAoABYCCACJABYCKQB7AFEDLgALACkDLgATADIDLgAb
AFEDLgAjAFoDLgArAIMDLgAzAIMDLgA7AIMDLgBDAFoDLgBLAIkDLgBTAIMDLgBbAKADQwBjABYC
SQB7AFEDYQBrABYCYwBzABYCiQC7AOoDowBrABYCowCDAIMEowCLAIoEowCTABYCqQC7APMDwwBr
ABYCwwCbALQEwwCjAAsFyQC7AOoD4wBrABYC4wCLAGQF4wCrAI4F4wCTABYC6QC7ABcEAwFrABYC
AwGDAIMEAwGLAO4FAwGTABYCCQG7AOoDIwFrABYCIwGbABgGIwGjAG8GKQG7ACAEQwFrABYCQwGD
AIMEQwGzAMgGQwGLANYGQwGTABYCSQG7AEQEYwFrABYCYwGzAMgGYwGLAAAHYwGTABYCaQG7AGgE
gwFrABYCgwGLACoHgwGrAI4FgwGTABYCiQG7AHEEowFrABYCowGLAFQHowGDAIMEowGTABYCqQG7
AHoEwAG7AOoDwwFrABYCwwGbAH4HwwGjAN8H4AG7AOoD4wFrABYC4wGLAD0I4wGzAMgG4wGTABYC
AwJrABYCAwKrAI4FAwKLAGcIAwKTABYCIAK7APMDIwJrABYCIwKjAJEIQAK7APMDQwJrABYCQwKz
AMgGQwKLAGQFQwKTABYCYwJrABYCYwKLACoHYwKTABYCgALDAPwDgAK7AAUEgwJrABYCgwKLAGcI
gwKTABYCwAK7AOoDwwJrABYCAAO7AAUEAAPDAA4EQAO7ABcEgAO7AOoDwAO7ACAEwAPDAOoD4APD
AOoD4AO7ACAEIAS7ACkEYATDADIEYAS7ADsEoAS7AEQE4AS7AE0E4ATDAFYEIAXDAOoDIAW7AF8E
YAW7AGgEgAW7AGgEwAW7AHEEAAa7AHoECQAlAgsAJQINACUCDwAlAhEAJQITACUCFQAlAhcAJQIZ
ACcCGwAlAh0AJQIfACUCIQAlAiMAJwIlACUCJwApAikAJQIrACkCLQArAjEAJQIzACUCNQAlAjcA
KQI5ACUCOwAlAj0AJQI/ACUCQQAlAkMAJQJHACUCSQAlAksAJQJNACUCTwAlAlEAKwJTACsCVQAp
AlcAKQJZACUCWwAlAj4AkADeAQMAAQAEAAMACgAEAAsABgASAAcAEwAKABQACwAAAOEI7QIAAEAD
8gIAALYL9wIAALUL/AIAAHgAAgMAALULBgMAAKYKCwMAALULEAMAAE0LFAMAAPQKGAMAAMoCEAMA
ALsKHQMAAD0CIgMCAAcAAwACAAgABQABAAkABQACAAoABwACAA4ACQABAA8ACQACABEACwABABIA
CwACABYADQACABoADwACABwAEQACAB4AEwABAB8AEwACACUAFQACACsAFwABACwAFwACAC4AGQAC
ADAAGwD8AEEBUAFmAY4BwAHOAQSAAAABAAAAxR/EWwAAAAAAADcGAAAEAAAAAAAAAAAAAAD2AZQB
AAAAAA4AAAAAAAAAAAAAAP8BngYAAAAABAAAAAAAAAAAAAAA9gFsAQAAAAAEAAAAAAAAAAAAAAD2
AQUDAAAAAAQAAAAAAAAAAAAAAPYBcQcAAAAADgAAAAAAAAAAAAAA/wFFAQAAAAAEAAAAAAAAAAAA
AAAIAoQIAAAAAAAAAAABAAAAwwkAABUAAgAWAAIAAAAAX1Z0YmxHYXAxXzIwAF9WdGJsR2FwMl82
MAA8PnBfXzAAPD5wX18xAElFbnVtZXJhYmxlYDEAQ2FsbFNpdGVgMQBDZWxsMQBfVnRibEdhcDNf
MzIASW50MzIAPD5vX18yADw+cF9fMgBnZXRfVmFsdWUyAHNldF9WYWx1ZTIAQ2VsbDIAX1Z0YmxH
YXAxXzMAPD5wX18zAEZ1bmNgMwBfVnRibEdhcDJfMTQAX1Z0YmxHYXAyXzg0AEZ1bmNgNABfVnRi
bEdhcDFfNDUAX1Z0YmxHYXAxXzUAX1Z0YmxHYXAyXzUAX1Z0YmxHYXAzXzUAX1Z0YmxHYXA0XzQ3
AF9WdGJsR2FwMl8xMjgAX1Z0YmxHYXA0XzEwOQBfVnRibEdhcDNfNTkAPE1vZHVsZT4AR2V0VHlw
ZUZyb21DTFNJRABSSFMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lz
dGVtLkRhdGEAZmV0Y2hUYWJsZURhdGEAZ2V0R3JvdXBEYXRhAG1zY29ybGliAFN5c3RlbS5Db2xs
ZWN0aW9ucy5HZW5lcmljAEFkZABSZWFkT25seVJlY29tbWVuZGVkAHhsU2hhcmVkAEd1aWQAU3Fs
Q29tbWFuZABXcml0ZVJlc1Bhc3N3b3JkAENyZWF0ZUluc3RhbmNlAGRlZmF1bHRJbnN0YW5jZQBY
bFNhdmVBc0FjY2Vzc01vZGUAVGV4dENvZGVwYWdlAGdldF9SYW5nZQB4bE5vQ2hhbmdlAEludm9r
ZQBEYXRhVGFibGUAVmFyaWFibGUASUVudW1lcmFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X05hbWUAc2V0X05hbWUAdGFibGVOYW1lAGdldF9D
b2x1bW5OYW1lAEZpbGVuYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAZ2V0X0Rh
dGFUeXBlAFN5c3RlbS5Db3JlAEJlZm9yZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UASW50ZXJuYWxEYXRh
Q29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBDcmVh
dGUAVGVtcGxhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUARGVsZXRlAENhbGxTaXRlAERpc3BJZEF0
dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBHdWlkQXR0cmlidXRlAENvbUV2ZW50
SW50ZXJmYWNlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBJbnRlcmZhY2VUeXBlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBMQ0lEQ29udmVyc2lvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBEZWZhdWx0TWVt
YmVyQXR0cmlidXRlAFR5cGVJZGVudGlmaWVyQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQ29DbGFzc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBn
ZXRfVmFsdWUAdmFsdWUAeGxFeGNsdXNpdmUAU1RfMmMwNjEwOGVlZGRhNDU2YmJjZDMzNDIxZjI3
ZWE5MWYAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaXNzaW5nAF9Xb3JrYm9v
awBSb3V0ZVdvcmtib29rAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAExvY2FsAE1hcnNoYWwATWljcm9zb2Z0Lk9m
ZmljZS5JbnRlcm9wLkV4Y2VsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTVF8yYzA2MTA4ZWVkZGE0NTZiYmNkMzM0MjFmMjdlYTkxZi5kbGwARmlsbABnZXRfSXRlbQBT
eXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBfQXBwbGlj
YXRpb24ARmlyZUluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxp
emF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xs
ZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAENvbmZsaWN0UmVzb2x1dGlvbgBTeXN0
ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8AQ1NoYXJwQXJndW1lbnRJbmZvAE1pY3Jvc29mdC5D
U2hhcnAAQ3JlYXRlQmFja3VwAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1bnRpbWVC
aW5kZXIAQ2FsbFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBFdmVudHNPYmplY3RXcmFw
cGVyAEFmdGVyAERiRGF0YUFkYXB0ZXIAU3FsRGF0YUFkYXB0ZXIASUVudW1lcmF0b3IAR2V0RW51
bWVyYXRvcgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAFNhdmVBcwBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8yYzA2MTA4ZWVkZGE0NTZiYmNkMzM0MjFmMjdlYTkx
Zi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU2F2ZUNoYW5n
ZXMAU1RfMmMwNjEwOGVlZGRhNDU2YmJjZDMzNDIxZjI3ZWE5MWYuUHJvcGVydGllcwBnZXRfVmFy
aWFibGVzAGNyZWF0ZUV4Y2VsRmlsZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmlu
ZGVyRmxhZ3MAU2V0dGluZ3MAZ2V0X1dvcmtib29rcwBFcXVhbHMAZ2V0X0NlbGxzAGdldF9Db2x1
bW5zAFN5c3RlbS5Db2xsZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAZ2V0X1NoZWV0cwBTY3JpcHRS
ZXN1bHRzAGdldF9FdmVudHMARG9jRXZlbnRzAFdvcmtib29rRXZlbnRzAEFwcEV2ZW50cwBnZXRf
RGlzcGxheUFsZXJ0cwBzZXRfRGlzcGxheUFsZXJ0cwBnZXRfUm93cwBDb25jYXQARmlsZUZvcm1h
dABPYmplY3QAU2V0AF9Xb3Jrc2hlZXQAVGFyZ2V0AFF1aXQAZ2V0X19EZWZhdWx0AHNldF9fRGVm
YXVsdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAQ29t
cG9uZW50AGdldF9DdXJyZW50AERvY0V2ZW50c19FdmVudABXb3JrYm9va0V2ZW50c19FdmVudABB
cHBFdmVudHNfRXZlbnQAZ2V0X0NvdW50AENvbnZlcnQAVGV4dFZpc3VhbExheW91dABNb3ZlTmV4
dABBZGRUb01ydQB0YWJsZU92ZXJ2aWV3AERhdGFSb3cAQ29sdW1uSW5kZXgAUm93SW5kZXgAZ2V0
X0Fzc2VtYmx5AEVtcHR5AAAAAACAnUQAYQB0AGEAIABTAG8AdQByAGMAZQA9AHYAawAtAHMAeABk
ADAAZQAtADAAMAAyADsASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAPQBTAHQAYQBnAGkA
bgBnAF8AQQBTAFMAUwA7AEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAPQB0
AHIAdQBlAAGAi3MAZQBsAGUAYwB0ACAAKgAgAGYAcgBvAG0AIABbAGQAYgBvAF0ALgBbAFQAYQBi
AGUAbABsAGcAcgB1AHAAcABlAHIAXQAgAG8AcgBkAGUAcgAgAGIAeQAgAFsARwByAHUAcABwAGUA
XQAsACAAWwBUAGEAYgBlAGwAbABuAHUAbQBtAGUAcgBdAAAbQwB1AHIAcgBlAG4AdAAgAGcAcgBv
AHUAcAAAMSQAUABhAGMAawBhAGcAZQA6ADoAVABqAGUAbgBlAHMAdABlAG8AbQByAOUAZABlAAEB
AIC5cwBlAGwAZQBjAHQAIAAqACAAZgByAG8AbQAgAFsAZABiAG8AXQAuAFsAVABhAGIAZQBsAGwA
ZwByAHUAcABwAGUAcgBdACAAdwBoAGUAcgBlACAAWwBHAHIAdQBwAHAAZQBdACAAPQAgACcAewAw
AH0AJwAgAG8AcgBkAGUAcgAgAGIAeQAgAFsARwByAHUAcABwAGUAXQAsACAAWwBUAGEAYgBlAGwA
bABuAHUAbQBtAGUAcgBdAAFJMAAwADAAMgA0ADUAMAAwAC0AMAAwADAAMAAtADAAMAAwADAALQBD
ADAAMAAwAC0AMAAwADAAMAAwADAAMAAwADAAMAA0ADYAAQ1HAHIAdQBwAHAAZQAAG0MAdQByAHIA
ZQBuAHQAIAB0AGEAYgBsAGUAABlUAGEAYgBlAGwAbABuAHUAbQBtAGUAcgAAB0EAZABkAAAPSwBp
AGwAZABlAGkAZAAAA18AABFTAHQAYQByAHQAaQBuAGcAAA1SAG8AdwBzADoAIAAAFSAAQwBvAGwA
dQBtAG4AcwA6ACAAABtTAHkAcwB0AGUAbQAuAFMAdAByAGkAbgBnAAADJwABG1cAcgBpAHQAaQBu
AGcAIAByAGEAbgBnAGUAADtcAFwAdgBrAC0AcwB4AGQAMABlAC0AMAAwADIAXABBAFMAUwBTAFwA
RABhAHQAYQBkAHUAbQBwAFwAAStzAGUAbABlAGMAdAAgACoAIABmAHIAbwBtACAAWwBkAGIAbwBd
AC4AWwAAA10AAHFTAFQAXwAyAGMAMAA2ADEAMAA4AGUAZQBkAGQAYQA0ADUANgBiAGIAYwBkADMA
MwA0ADIAMQBmADIANwBlAGEAOQAxAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAA8HiMP99RkkCMBytrFGpotQAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgIEE
IAEBBgkgAgESgJkSgJkFIAIBDg4GIAEBEoCZBSAAEoC1CgcFAg4SPRJBEkUFIAASgLkFIAASgL0G
IAESgMEcAyAAHAMgAA4CBg4KIAYBCA4ODggQAgQgAQIcBQACDg4cBiACAQ4SQQUgAQESRQUgAQgS
PSUHEhI9EkACEhwSMA4IEkkSTQgUHAIAAgAAEigSKBJJElUSWQgICAABEoCZEYDZBgABHBKAmQIG
HAUgABKA5QUgARJNCAQgARwOBCAAEkkEIAECDggAARKAmRGA7Q4AAxKA9RGA+RKAmRKAmQ0VEmUB
FRJxAxJtHBJACwABFRJlARMAEoD1AwYTAAkAAhKA/RGBAQ4cAAUSgPURgPkOFRKBBQESgJkSgJkV
EoEFARKA/Q4VEmUBFRJpBBJtEiwcHAoVEmkEEm0SLBwcCiADEwMTABMBEwIJFRJxAxJtHBJACCAC
EwITABMBBgADDg4ODgMgAAgFIAASgQ0DIAACBxQcAgACAAAFIAIBCAgFAAEOHRwFIAESVQgFIAAS
gJkEIAEcCAUAAg4cHAYgAwEICBwNFRJlARUScQMSbRwSKAkVEnEDEm0cEigFAAIODg4JBwQOEj0S
QRJFBSAAEoERByACAQ4SgREIt3pcVhk04IkIiYRdzYCAzJEIsD9ffxHVCjoEAwAAAAQBAAAABAIA
AAAEAAAAAAEbARoBHAETAwYSeQMGEn0DBhIQAgYIAwYRRAMGEVQPBhUSZQEVEmkEEm0SLBwcDgYV
EmUBFRJxAxJtHBJADgYVEmUBFRJxAxJtHBIoBCAAEj0FIAEBEj0FIAESPQ4EAAASeQQAABJ9BQAB
ARJ9BAAAEhADAAABBSACHBwcBiADARwcHAQgAQEcByAEHBwcHBwEIAEcHAUgARIwHAQgABI8BCAB
AQIEIAASLBAgDAEcHBwcHBwRRBwcHBwcBCAAEigGIAISKBwcBAgAEnkECAASfQQIABIQBQgCHBwc
AwgAHAQIARwcBAgAEjwDCAAOAwgAAgQIABIsBAgAEigGCAISKBwcCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8yYzA2MTA4ZWVkZGE0NTZiYmNk
MzM0MjFmMjdlYTkxZgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIyAABJAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3Jr
IDQuNQgBAAAAAAAAAAgBAGwFAAAAAAgBAAQAAAAAAAgBALUAAAAAAAgBAAEAAAAAAAgBADwCAAAA
AAgBAFcBAAAAAAgBAC4BAAAAAAgBAAMAAAAAAAgBABUBAAAAAAgBAOUBAAAAAAgBAIUHAAAAAAgB
AAwAAAAAAAgBAHUAAAAAAAgBAG4AAAAAAAgBAO4AAAAAAAgBAMUAAAAAAAYBAAIAAAApAQAkMDAw
MjQ0MTMtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AABWAQAoTWljcm9zb2Z0Lk9mZmljZS5J
bnRlcm9wLkV4Y2VsLkFwcEV2ZW50cyhNaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuQXBw
RXZlbnRzAABYAQAkMDAwMjA4MTMtMDAwMC0wMDAwLWMwMDAtMDAwMDAwMDAwMDQ2Lk1pY3Jvc29m
dC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5BcHBFdmVudHNfRXZlbnQAACkBACQwMDAyMDhENS0wMDAw
LTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAAF8BAFpTeXN0ZW0uT2JqZWN0LCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkAACkBACQwMDAyNDQxMS0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAAFYBAChNaWNy
b3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuRG9jRXZlbnRzKE1pY3Jvc29mdC5PZmZpY2UuSW50
ZXJvcC5FeGNlbC5Eb2NFdmVudHMAAFgBACQwMDAyMDgxMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAw
MDAwNDYuTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkRvY0V2ZW50c19FdmVudAAADQEA
CF9EZWZhdWx0AAApAQAkMDAwMjA4NDYtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAApAQAk
MDAwMjA4RDctMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAApAQAkMDAwMjA4REEtMDAwMC0w
MDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAApAQAkMDAwMjQ0MTItMDAwMC0wMDAwLUMwMDAtMDAwMDAw
MDAwMDQ2AABgAQAtTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLldvcmtib29rRXZlbnRz
LU1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Xb3JrYm9va0V2ZW50cwAAXQEAJDAwMDIw
ODEzLTAwMDAtMDAwMC1jMDAwLTAwMDAwMDAwMDA0NjNNaWNyb3NvZnQuT2ZmaWNlLkludGVyb3Au
RXhjZWwuV29ya2Jvb2tFdmVudHNfRXZlbnQAACkBACQwMDAyMDhEQi0wMDAwLTAwMDAtQzAwMC0w
MDAwMDAwMDAwNDYAACkBACQwMDAyMDhEOC0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAAFsB
ACQwMDAyMDgxMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwNDYxTWljcm9zb2Z0Lk9mZmljZS5J
bnRlcm9wLkV4Y2VsLlhsU2F2ZUFzQWNjZXNzTW9kZQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMhRAAAAAAAA
AAAAAOJRAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUUQAAAAAAAAAAAAAAAF9Db3JEbGxNYWlu
AG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAAAAAA
AAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
xFvFHwAAAQDEW8UfPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgAB
AAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAA
AAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAyAGMAMAA2
ADEAMAA4AGUAZQBkAGQAYQA0ADUANgBiAGIAYwBkADMAMwA0ADIAMQBmADIANwBlAGEAOQAxAGYA
AAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAAxADMAMwAuADIAMwA0
ADkAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAyAGMAMAA2ADEA
MAA4AGUAZQBkAGQAYQA0ADUANgBiAGIAYwBkADMAMwA0ADIAMQBmADIANwBlAGEAOQAxAGYALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADIA
YwAwADYAMQAwADgAZQBlAGQAZABhADQANQA2AGIAYgBjAGQAMwAzADQAMgAxAGYAMgA3AGUAYQA5
ADEAZgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAyAGMA
MAA2ADEAMAA4AGUAZQBkAGQAYQA0ADUANgBiAGIAYwBkADMAMwA0ADIAMQBmADIANwBlAGEAOQAx
AGYAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAMQAzADMA
LgAyADMANAA5ADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAMQAzADMALgAyADMANAA5ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAA9DEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="277,150" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>