<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/17/2021 12:47:12 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="VK-C0D0E-054"
  DTS:CreatorName="I04\vk300"
  DTS:DTSID="{223B8C11-FE7F-435F-AB9B-D372DE1E2062}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="1044"
  DTS:ObjectName="Lokale data - Les mappe"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="20"
  DTS:VersionGUID="{489E29EB-3F75-4BED-8129-27E5FCF4FBAA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4856D9D1-8F95-4A90-A469-9831F3339AE0}"
      DTS:ObjectName="Rootfolder"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{36E42007-EDEA-4218-9040-EC2C38A0CE28}"
      DTS:ObjectName="Tablename">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{AEA88E5C-5AC2-463A-9C50-61598E3E719E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\OLE DB Command"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="OLE DB Command"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select 1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\OLE DB Command.Connections[OleDbConnection]"
                  connectionManagerID="{E03B5EEF-9A98-4EE4-931D-9D4F8E0460CE}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Staging_ASSS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.IO;
using System.Data.SqlClient;
using System.Configuration;
using System.Linq;
using System.Collections.Generic;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.OleDb;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private SqlConnection scn;
    private SqlCommand command;
    private string sqlConnectionString, sqlString, result;
    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        sqlConnectionString = @"Data Source=vk-sxd0e-003;Initial Catalog=TEST_Staging_ASSS;Integrated Security=true";
        scn = new SqlConnection(sqlConnectionString);
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public string translatePathToDestinationTable(string folderpath)
    {
        string[] folderSplit = folderpath.Split('\\');
        int maxIndex = folderSplit.Length - 1;

        return "[KS_" + folderSplit[maxIndex].Remove(5) + "]";
    }

    public void readFolder(string folderpath)
    {
        string[] fileEntries = Directory.GetFiles(folderpath);
        string[] subdirectoryEntries = Directory.GetDirectories(folderpath);

        foreach (String filePath in fileEntries)
        {
            this.ComponentMetaData.FireInformation(1, "Filepath", filePath, "", 0, true);

            this.ComponentMetaData.FireInformation(1, "destinationTable", translatePathToDestinationTable(folderpath), "", 0, true);
            readFile(filePath, "");
        }

        foreach (String subdirPath in subdirectoryEntries)
        {
            this.ComponentMetaData.FireInformation(1, "Dirpath", subdirPath, "", 0, true);
            readFolder(subdirPath);
        }
    }

    public void readFile(string filepath, string destinationTable)
    {
        this.ComponentMetaData.FireInformation(1, "File", "reading file at " + filepath, "", 0, true);
        string excelConnectionString = @"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + filepath + ";Extended Properties='Excel 8.0;HDR=Yes;IMEX=1'";
        string queryString = "select * from [Til databasen$]";

        try
        {
            OleDbDataReader reader;
            using (OleDbConnection connection = new OleDbConnection(excelConnectionString))
            {
                OleDbCommand command = new OleDbCommand(queryString, connection);
                //this.ComponentMetaData.FireInformation(1, "Connection", "opening", "", 0, true);
                connection.Open();
                this.ComponentMetaData.FireInformation(1, "Connection", "opened", "", 0, true);

                string sheet1 = connection.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null).Rows[0]["TABLE_NAME"].ToString();
                DataTable dtExcelData = new DataTable();

                this.ComponentMetaData.FireInformation(1, "Reader", "starting", "", 0, true);
                reader = command.ExecuteReader();

                dtExcelData.Columns.AddRange(new DataColumn[6] {
                        new DataColumn("Kommunenummer", typeof(string)),
                        new DataColumn("Variabelnavn", typeof(string)),
                        new DataColumn("aldersgrupper", typeof(string)),
                        new DataColumn("Kilde", typeof(string)),
                        new DataColumn("Årgang", typeof(string)),
                        new DataColumn("Verdi", typeof(decimal))
                        });
                //dt.Columns.Add(new DataColumn(reader.GetName(i), typeof(string)));

                using (OleDbDataAdapter oda = new OleDbDataAdapter(queryString, connection))
                {
                    this.ComponentMetaData.FireInformation(1, "Filling DataTable", "starting...", "", 0, true);
                    oda.Fill(dtExcelData);
                    this.ComponentMetaData.FireInformation(1, "Filling DataTable", "ending...", "", 0, true);
                }
                this.ComponentMetaData.FireInformation(1, "Printing DataTable", dtExcelData.Rows.Count.ToString(), "", 0, true);
                /* while (reader.Read())
                 {
                     int range = reader.FieldCount;
                     if (dt == null)
                     {
                         dt = new DataTable();
                         for (int i = 0; i < range; i++)
                         {
                             //this.ComponentMetaData.FireInformation(1, reader.GetName(i), reader.GetValue(i).ToString(), "", 0, true);
                             this.ComponentMetaData.FireInformation(1, reader.GetName(i), "", "", 0, true);
                             
                         }
                     }

                 }*/

                this.ComponentMetaData.FireInformation(1, "Reader", "closing", "", 0, true);
                reader.Close();
                this.ComponentMetaData.FireInformation(1, "Reader", "closed", "", 0, true);

                this.ComponentMetaData.FireInformation(1, "Connection", "closing", "", 0, true);
                connection.Close();
                this.ComponentMetaData.FireInformation(1, "Connection", "closed", "", 0, true);
                OleDbConnection.ReleaseObjectPool();
                
                using (SqlConnection con = new SqlConnection(sqlConnectionString))
                {
                    using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(con))
                    {
                        sqlBulkCopy.DestinationTableName = "dbo.[KS_BNV02 Tiltak etter aldergrupper og type tiltak]";
                        /*sqlBulkCopy.ColumnMappings.Add("Kommunenummer", "Regionkode");
                        sqlBulkCopy.ColumnMappings.Add("Variabelnavn", "Statistikkvariabelnavn");
                        sqlBulkCopy.ColumnMappings.Add("aldersgrupper", "Aldernavn");
                        sqlBulkCopy.ColumnMappings.Add("Kilde", "Kildenavn");
                        sqlBulkCopy.ColumnMappings.Add("Årgang", "Tid");
                        sqlBulkCopy.ColumnMappings.Add("Verdi", "Verdi");*/
                        con.Open();
                        sqlBulkCopy.WriteToServer(dtExcelData);
                        con.Close();
                    }
                }

            }
        }
        catch (Exception e)
        {
            this.ComponentMetaData.FireInformation(1, "Failed at", filepath, "", 0, true);
            this.ComponentMetaData.FireInformation(1, "FAAACK exeption sucky balls", e.ToString(), "", 0, true);
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */


        // Arknavn
        // Til databasen bv

        readFolder(Variables.Rootfolder);

        Output0Buffer.AddRow();
        Output0Buffer.derp = 9000;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 derp
    {
        set
        {
            this[0] = value;
        }
    }
    public bool derp_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String Rootfolder
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Rootfolder"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9746464a3ca94d5f86042d86985b1dd6.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C0745717-CCEF-48F5-8927-82F7EA616589}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9746464a3ca94d5f86042d86985b1dd6</RootNamespace>
    <AssemblyName>SC_9746464a3ca94d5f86042d86985b1dd6</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9746464a3ca94d5f86042d86985b1dd6.Properties.Settings.get_Default():SC_9746464a3ca94d5f86042d86985b1dd6.Properties.Sett" +
    "ings")]

namespace SC_9746464a3ca94d5f86042d86985b1dd6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_9746464a3ca94d5f86042d86985b1dd6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_9746464a3ca94d5f86042d86985b1dd6</msb:DisplayName>
    <msb:ProjectId>{79434548-0FD0-4FF7-BCD5-41C8C720ABB4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_9746464a3ca94d5f86042d86985b1dd6.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9746464a3ca94d5f86042d86985b1dd6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_9746464a3ca94d5f86042d86985b1dd6")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9746464a3ca94d5f86042d86985b1dd6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9746464a3ca94d5f86042d86985b1dd6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9746464a3ca94d5f86042d86985b1dd6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9746464a3ca94d5f86042d86985b1dd6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9746464a3ca94d5f86042d86985b1dd6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9746464a3ca94d5f86042d86985b1dd6.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
yQCoAEUAKQFLBUsAGQHyCGsAiQBoBxAAMQFoB3EAOQEwBQYAQQFTCHgAiQA2AX0AkQDVCIcAUQEH
BY0AWQEHBZQA0QB1BJkAkQBoBwYAMQGSBp0AkQCnCKIAcQGjAagAaQFoB7EAYQEtAbkAmQBoB3EA
iQHYBMEAkQFeAgYAmQFsCccAoQF1BJkAqQFYAgYAOQFYAgYAiQD1BMsAoQBoB88AoQC+ARAAoQBa
B9UAsQBoB9sAsQAQBeUAsQDtBAEAsQFoBxAAsQAMCgYAsQAACQYAsQADCesAyQBoBwYAyQCGAPMA
yQCNCPoA0QBoBwYAyQBaCAABuQEHBQYByQDvCQ0BwQHACRMBcQETChoB4QBoByABAQFoBwYALgAL
ALMBLgATALwBLgAbANsBLgAjAOQBLgArAA0CLgAzAA0CLgA7AA0CLgBDAOQBLgBLABMCLgBTAA0C
LgBbACoCQwBjAHQCiQBzANsBqQBzANsB4wBrAHQCoQF7AHQCGwA0AFYA7wADAAEABgADAAcABAAI
AAYAAAB4BpgBAADhBJwBAACvBqABAADoBqQBAAAdAqkBAAAZCa4BAQAJAAMAAQAKAAUAAgAVAAcA
AgAXAAkAAgAYAAsAAQAZAAsAAgAaAA0ABIAAAAEAAAAAAAAAAAAAAAAAWQAAAAQAAAAAAAAAAAAA
ACgB0AAAAAAADgAAAAAAAAAAAAAAMQF2CQAAAAAEAAAAAAAAAAAAAAAoAZwAAAAAAA4AAAAAAAAA
AAAAADEBkwkAAAAABAAAAAAAAAAAAAAAKAEZBQAAAAAOAAAAAAAAAAAAAAAxAVAGAAAAAA4AAAAA
AAAAAAAAADEBLQYAAAAAAAAAAAEAAADDBwAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElE
VFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAElu
dDMyAFNDXzk3NDY0NjRhM2NhOTRkNWY4NjA0MmQ4Njk4NWIxZGQ2ADxNb2R1bGU+AEdldE91dHB1
dElEAFN5c3RlbS5JTwBTeXN0ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAU3lzdGVtLkRh
dGEuT2xlRGIAbXNjb3JsaWIATWFya091dHB1dHNGaW5pc2hlZABPbGVEYlNjaGVtYUd1aWQAT2xl
RGJDb21tYW5kAFNxbENvbW1hbmQAY29tbWFuZABkZWZhdWx0SW5zdGFuY2UAQWRkUmFuZ2UAR2V0
T2xlRGJTY2hlbWFUYWJsZQBEYXRhVGFibGUAdHJhbnNsYXRlUGF0aFRvRGVzdGluYXRpb25UYWJs
ZQBkZXN0aW5hdGlvblRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAHJlYWRGaWxlAHNldF9EZXN0aW5hdGlvblRhYmxlTmFtZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBDbG9zZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4
ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAUmVtb3ZlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
c3FsU3RyaW5nAHNxbENvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAZmlsZXBhdGgAZm9sZGVycGF0
aABEZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ185NzQ2NDY0YTNjYTk0ZDVmODYwNDJk
ODY5ODViMWRkNi5kbGwARmlsbABzZXRfZGVycF9Jc051bGwAU2V0TnVsbABSZWxlYXNlT2JqZWN0
UG9vbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4Ac2NuAE9wZW4AU2NyaXB0
TWFpbgBEYXRhQ29sdW1uAEZpcmVJbmZvcm1hdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBE
YXRhUm93Q29sbGVjdGlvbgBPbGVEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBJbnZhbGlkT3Bl
cmF0aW9uRXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAHNldF9kZXJwAENoYXIAT2xlRGJEYXRhUmVhZGVy
AEV4ZWN1dGVSZWFkZXIAcmVhZEZvbGRlcgBnZXRfUm9vdGZvbGRlcgBPdXRwdXQwQnVmZmVyAFBp
cGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBl
bGluZS5XcmFwcGVyAE9sZURiRGF0YUFkYXB0ZXIAV3JpdGVUb1NlcnZlcgAuY3RvcgAuY2N0b3IA
T3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfOTc0NjQ2NGEzY2E5NGQ1Zjg2MDQyZDg2OTg1YjFkZDYu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAEdldERpcmVjdG9y
aWVzAFNDXzk3NDY0NjRhM2NhOTRkNWY4NjA0MmQ4Njk4NWIxZGQ2LlByb3BlcnRpZXMAVGFibGVz
AGdldF9SZWFkT25seVZhcmlhYmxlcwBHZXRGaWxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENv
bHVtbkluZGV4ZXMAU2V0dGluZ3MAZ2V0X0NvbHVtbnMAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5p
c2hPdXRwdXRzAGdldF9Sb3dzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AE9iamVjdABTZXRF
bmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdAByZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50
AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ291bnQA
TWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABQcmltZU91dHB1dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxD
b250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AERhdGFSb3cAQWRkUm93AGdldF9Bc3NlbWJseQBT
cWxCdWxrQ29weQBEaXJlY3RvcnkAAAAAgKdEAGEAdABhACAAUwBvAHUAcgBjAGUAPQB2AGsALQBz
AHgAZAAwAGUALQAwADAAMwA7AEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0AVABFAFMA
VABfAFMAdABhAGcAaQBuAGcAXwBBAFMAUwBTADsASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBj
AHUAcgBpAHQAeQA9AHQAcgB1AGUAAQlbAEsAUwBfAAADXQAAEUYAaQBsAGUAcABhAHQAaAAAAQAh
ZABlAHMAdABpAG4AYQB0AGkAbwBuAFQAYQBiAGwAZQAAD0QAaQByAHAAYQB0AGgAAAlGAGkAbABl
AAAhcgBlAGEAZABpAG4AZwAgAGYAaQBsAGUAIABhAHQAIAAAXVAAcgBvAHYAaQBkAGUAcgA9AE0A
aQBjAHIAbwBzAG8AZgB0AC4AQQBDAEUALgBPAEwARQBEAEIALgAxADIALgAwADsARABhAHQAYQAg
AFMAbwB1AHIAYwBlAD0AAF87AEUAeAB0AGUAbgBkAGUAZAAgAFAAcgBvAHAAZQByAHQAaQBlAHMA
PQAnAEUAeABjAGUAbAAgADgALgAwADsASABEAFIAPQBZAGUAcwA7AEkATQBFAFgAPQAxACcAAT1z
AGUAbABlAGMAdAAgACoAIABmAHIAbwBtACAAWwBUAGkAbAAgAGQAYQB0AGEAYgBhAHMAZQBuACQA
XQAAFUMAbwBuAG4AZQBjAHQAaQBvAG4AAA1vAHAAZQBuAGUAZAAAFVQAQQBCAEwARQBfAE4AQQBN
AEUAAA1SAGUAYQBkAGUAcgAAEXMAdABhAHIAdABpAG4AZwAAG0sAbwBtAG0AdQBuAGUAbgB1AG0A
bQBlAHIAABlWAGEAcgBpAGEAYgBlAGwAbgBhAHYAbgAAG2EAbABkAGUAcgBzAGcAcgB1AHAAcABl
AHIAAAtLAGkAbABkAGUAAA3FAHIAZwBhAG4AZwABC1YAZQByAGQAaQAAI0YAaQBsAGwAaQBuAGcA
IABEAGEAdABhAFQAYQBiAGwAZQAAF3MAdABhAHIAdABpAG4AZwAuAC4ALgAAE2UAbgBkAGkAbgBn
AC4ALgAuAAAlUAByAGkAbgB0AGkAbgBnACAARABhAHQAYQBUAGEAYgBsAGUAAA9jAGwAbwBzAGkA
bgBnAAANYwBsAG8AcwBlAGQAAG9kAGIAbwAuAFsASwBTAF8AQgBOAFYAMAAyACAAVABpAGwAdABh
AGsAIABlAHQAdABlAHIAIABhAGwAZABlAHIAZwByAHUAcABwAGUAcgAgAG8AZwAgAHQAeQBwAGUA
IAB0AGkAbAB0AGEAawBdAAATRgBhAGkAbABlAGQAIABhAHQAADdGAEEAQQBBAEMASwAgAGUAeABl
AHAAdABpAG8AbgAgAHMAdQBjAGsAeQAgAGIAYQBsAGwAcwAAgJtJAHMATgB1AGwAbAAgAHAAcgBv
AHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUA
LgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBt
AG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAABVSAG8AbwB0AGYAbwBsAGQA
ZQByAABxUwBDAF8AOQA3ADQANgA0ADYANABhADMAYwBhADkANABkADUAZgA4ADYAMAA0ADIAZAA4
ADYAOQA4ADUAYgAxAGQAZAA2AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAAJM0lx7sq6EqcfE8oP0tKCgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQEReQUHAh0OCAYg
AR0OHQMEIAEOCAYAAw4ODg4KBwYdDh0OCA4CDgUAAR0ODgUgABKAlQogBgEIDg4OCBACFAcLDg4C
EkESRRJJEk0IEjkSURJVBQACDg4OBiACAQ4SRQQGEYClCSACEkkRgKUdHAUgABKAqQYgARKArQgE
IAEcDgMgAA4EIAASQQUgABKAsQgAARKAuRGAvQcgAgEOEoC5ByABAR0SgLUFIAEIEkkDIAAIAwAA
AQUgAQESOQUgAQESSQkgAwESXR0IEmEFIAIBCBwDIAACAwcBCAYAAggSYQ4FIAEdCAgFIAASgN0G
IAESgOEcBQAAEoDlBiABHBKA6QUgABKA7QcgAgEOEoDtCLd6XFYZNOCJCImEXc2AgMyRAwYSOQMG
Ej0CBg4DBhIUAwYSGAMGEgwDBhJlAwYScQMGEnUDBhIgBCABDg4FIAIBDg4EIAEBAgsgBAEIHQgd
El0SYQUgAQESZQQAABJxBAAAEnUFAAEBEnUEAAASIAMoAAgDKAACAygADgQIABJxBAgAEnUECAAS
IAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0Nf
OTc0NjQ2NGEzY2E5NGQ1Zjg2MDQyZDg2OTg1YjFkZDYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD0QQAAAAAAAAAAAAAO
QgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
OQA3ADQANgA0ADYANABhADMAYwBhADkANABkADUAZgA4ADYAMAA0ADIAZAA4ADYAOQA4ADUAYgAx
AGQAZAA2AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA5ADcANAA2ADQANgA0AGEAMwBj
AGEAOQA0AGQANQBmADgANgAwADQAMgBkADgANgA5ADgANQBiADEAZABkADYALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADkANwA0ADYANAA2
ADQAYQAzAGMAYQA5ADQAZAA1AGYAOAA2ADAANAAyAGQAOAA2ADkAOAA1AGIAMQBkAGQANgAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA5ADcANAA2ADQANgA0
AGEAMwBjAGEAOQA0AGQANQBmADgANgAwADQAMgBkADgANgA5ADgANQBiADEAZABkADYAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAACAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_9746464a3ca94d5f86042d86985b1dd6</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">$Package::Rootfolder</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">ED</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[derp]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[derp]"
                      name="derp" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Output 0]"
              endId="Package\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
              name="Output 0"
              startId="Package\Data Flow Task\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="150,42"
          Id="Package\Data Flow Task"
          TopLeft="305.142862339409,149.270590328758" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="162,42"
          Id="Package\Data Flow Task\Script Component"
          TopLeft="293.71429071621,112.56470746103" />
        <NodeLayout
          Size="166,42"
          Id="Package\Data Flow Task\OLE DB Command"
          TopLeft="290,249" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 0]"
          TopLeft="373.857145358105,154.56470746103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,94.43529253897"
              Start="0,0"
              End="0,86.93529253897">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.93529253897" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>