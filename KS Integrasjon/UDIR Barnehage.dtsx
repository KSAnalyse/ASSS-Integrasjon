<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/3/2021 2:28:50 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="VK-C0D0E-360"
  DTS:CreatorName="I04\vk431"
  DTS:DTSID="{90152404-AC77-44FD-AD4F-C654913ED93E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="1044"
  DTS:ObjectName="UDIR Barnehage"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="106"
  DTS:VersionGUID="{734E18E2-2C1D-47B5-9570-9F3F469D1ECB}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{0C26F0C8-F000-41B4-8F90-7F0B9E09BF4E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{740B3E9F-B2DC-4C28-A080-81E88333AFBE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\Data Flow Task\OLE DB Command"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="OLE DB Command"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select 1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Connections[OleDbConnection]"
                      connectionManagerID="{E03B5EEF-9A98-4EE4-931D-9D4F8E0460CE}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Staging_ASSS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task\Script Component 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component 1"
                  version="11">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using System.Data;
using System.IO;
using System.Runtime.Serialization.Json;
using System.Text;
using Newtonsoft.Json;
using System.Data.SqlClient;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
/// 

public class Data
{
    public Data(string kommunenummer, string variabelnavn, string kilde, decimal verdi, int år)
    {
        Kommunenummer = kommunenummer;
        Variabelnavn = variabelnavn;
        Kilde = kilde;
        Verdi = verdi;
        År = år;
    }

    public string Kommunenummer { get; set; }
    public string Variabelnavn { get; set; }
    public string Kilde { get; set; }
    public decimal Verdi { get; set; }
    public int År { get; set; }
}

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 

    private Dictionary<string, List<string>> tmpKommune;
    private List<Data> datas;
    private string[] ASSS_Kommuner = { "1108", "3004", "3005", "3024", "4204", "4601", "5001", "5401", "0301", "1103" };
    private DateTime dateTime = new DateTime();

    public override void PreExecute()
    {
        base.PreExecute();
        tmpKommune = new Dictionary<string, List<string>>();
        datas = new List<Data>();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public List<string> addKommuneData(string[] data)
    {
        List<string> kommuner = new List<string>();
        string[] jsonValues = data;
        string indikatorDataKommune = "";
        for (int i = 0; i < jsonValues.Length; i++)
        {
            if (jsonValues[i].Contains("indikatorDataKommune"))
            {
                indikatorDataKommune = jsonValues[i];
                jsonValues = indikatorDataKommune.Split('{');
                indikatorDataKommune = jsonValues[1];
                jsonValues = indikatorDataKommune.Split(',');
            }
        }
        foreach (string kommuneData in jsonValues)
        {
            if (kommuneData.Contains("foreldreundersokelsenTilfredshet") || kommuneData.Contains("foreldreundersokelsenAntallBesvarte"))
            {
                kommuner.Add(kommuneData);
            }
        }

        return kommuner;
    }

    public void getKommuneData()
    {
        foreach (string regionkode in ASSS_Kommuner)
        {
            string fylkeURL = "https://www.barnehagefakta.no/api/Kommune/" + regionkode;
            HttpWebRequest request = WebRequest.Create(fylkeURL) as HttpWebRequest;
            request.Method = "GET";
            request.ContentType = "application/json";
            string jsonValue = "";

            using (HttpWebResponse response = request.GetResponse() as HttpWebResponse)
            {
                StreamReader streamReader = new StreamReader(response.GetResponseStream());
                jsonValue = streamReader.ReadToEnd();
            }
            string[] jsonValues = jsonValue.Split(new string[] { "}," }, StringSplitOptions.None);

            tmpKommune.Add(regionkode, addKommuneData(jsonValues));
        }
    }

    public void addKommuneData()
    {
        string kommunenummer = "";
        string variabelnavn = "";
        string kilde = "Utdanningsdirektoratet/Foreldreundersøkelse i barnehage";
        decimal verdi = 0;
        int tid = 2020;
        foreach (KeyValuePair<string, List<string>> kvp in tmpKommune)
        {
            kommunenummer = kvp.Key;
            foreach (string value in kvp.Value)
            {
                string[] splitValue = value.Split(':');

                splitValue[0] = splitValue[0].Trim('"');
                if (splitValue[0].Equals("foreldreundersokelsenTilfredshet"))
                {
                    variabelnavn = "Foreldreundersøkelsen: Tilfredshet";
                }
                else if (splitValue[0].Equals("foreldreundersokelsenAntallBesvarte"))
                {
                    variabelnavn = "Foreldreundersøkelsen: Besvarte";
                }
                try
                {
                    if (!splitValue[1].Equals("null"))
                        verdi = decimal.Parse(splitValue[1].Replace(".", ","));
                    else
                        verdi = 0;
                }
                catch (FormatException e)
                {
                    ComponentMetaData.FireInformation(10, "Verdi", e.ToString(), "", 0, true);
                }
                datas.Add(new Data(kommunenummer, variabelnavn, kilde, verdi, tid));
            }
        }
    }

    public void writeToTable()
    {
        string deleteString = "DELETE FROM [dbo].[KS_BHG02 Foreldreundersøkelsen i barnehage] WHERE År = '2020'";
        string destinationTable = "[dbo].[KS_BHG02 Foreldreundersøkelsen i barnehage]";
        string insertString = "INSERT INTO " + destinationTable + " (Kommunenummer, Variabelnavn, Kilde, Verdi, År) VALUES (@param1, @param2, @param3, @param4, @param5)";
        string sqlConnectionString = @"Data Source=vk-sxd0e-002;Initial Catalog=Staging_ASSS;Integrated Security=true";
        DataTable dt = new DataTable();

        dt.Columns.AddRange(new DataColumn[5]
        {
            new DataColumn("Kommunenummer", typeof(string)),
            new DataColumn("Variabelnavn", typeof(string)),
            new DataColumn("Kilde", typeof(string)),
            new DataColumn("Verdi", typeof(decimal)),
            new DataColumn("År", typeof(int))
        });

        DataRow row;

        foreach (Data data in datas)
        {
            row = dt.NewRow();
            row["Kommunenummer"] = data.Kommunenummer;
            row["Variabelnavn"] = data.Variabelnavn;
            row["Kilde"] = data.Kilde;
            if (data.Verdi == 0)
            {
                row["Verdi"] = Convert.DBNull;
            }
            else
            {
                row["Verdi"] = data.Verdi;
            }
            row["År"] = data.År;
            dt.Rows.Add(row);
        }

        using (SqlConnection connection = new SqlConnection(sqlConnectionString))
        {
            connection.Open();
            using (SqlCommand command = new SqlCommand(deleteString, connection))
            {
                command.ExecuteNonQuery();
            }
            using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(connection))
            {
                sqlBulkCopy.DestinationTableName = destinationTable;
                sqlBulkCopy.WriteToServer(dt);
            }
            connection.Close();
        }
    }

    public override void CreateNewOutputRows()
    {
        getKommuneData();
        addKommuneData();
        writeToTable();
        foreach (Data data in datas)
        {
            ComponentMetaData.FireInformation(10, "Kommunenummer", data.Kommunenummer, "", 0, true);
            ComponentMetaData.FireInformation(10, "Variabelnavn", data.Variabelnavn, "", 0, true);
            ComponentMetaData.FireInformation(10, "Kilde", data.Kilde, "", 0, true);
            ComponentMetaData.FireInformation(10, "Verdi", data.Verdi.ToString(), "", 0, true);
            ComponentMetaData.FireInformation(10, "År", data.År.ToString(), "", 0, true);
        }
        Output0Buffer.AddRow();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DerpO
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DerpO_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e90a61ee22ff4cf98bef51377dd8929c.Properties.Settings.get_Default():SC_e90a61ee22ff4cf98bef51377dd8929c.Properties.Sett" +
    "ings")]

namespace SC_e90a61ee22ff4cf98bef51377dd8929c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_e90a61ee22ff4cf98bef51377dd8929c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_e90a61ee22ff4cf98bef51377dd8929c</msb:DisplayName>
    <msb:ProjectId>{7081FE2D-96F5-47BC-B08A-4ADEEDA4929D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_e90a61ee22ff4cf98bef51377dd8929c.csproj" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_e90a61ee22ff4cf98bef51377dd8929c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_e90a61ee22ff4cf98bef51377dd8929c")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_e90a61ee22ff4cf98bef51377dd8929c.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{303725DF-1308-47C5-BC9D-71A72460FBEE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_e90a61ee22ff4cf98bef51377dd8929c</RootNamespace>
    <AssemblyName>SC_e90a61ee22ff4cf98bef51377dd8929c</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x86\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>bin\x86\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json">
      <HintPath>C:\Program Files (x86)\Microsoft Visual Studio\Installer\resources\app\layout\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e90a61ee22ff4cf98bef51377dd8929c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e90a61ee22ff4cf98bef51377dd8929c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e90a61ee22ff4cf98bef51377dd8929c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_e90a61ee22ff4cf98bef51377dd8929c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_e90a61ee22ff4cf98bef51377dd8929c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="6.0.3" targetFramework="net45" />
</packages>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_e90a61ee22ff4cf98bef51377dd8929c.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
SAAcAE4BTwBJAakKYQBZAYQDZwBZAQUCEABZAQQDEABZAWQDbgBpAQgGdAB5AQ0JegCBAeYBgQCJ
AXYDBgBJAdEKhQAMAE4BjwAMAP8IvgAkACcL1AAsALML6gAsAFUF7wAcAP8I9AA0ACcL6gBJASoG
AwFJATsKQwBJARACCQF5AH4DDwEJAc0AFQFpAH8FgQCZAVYGGwEUAE4BTwA0AJQLJgEkAJQLJgFJ
AakKQgHJAA0JBgDJAEsKSQGxAYACTwGpAQ0JWAGhAUICYAEUAP8I9AA8ACcL6gDJAKwLbwHRABoG
dAF5AIsHegF5AOQLfgHJAegFhgHJAIwKiQHRAU4BjwE8AJQLJgHZAA0JEADZATsGBgDhAA0JlQHh
AdQLnAHpAA0JoAHpAJICEADpAPEIpgHZAXADBgB5AH8FgQDBAX8FgQDxAA0JuwHxABoGxgHxAAAG
AQDpAQ0JEADxAKULBgDxAMIKBgDxAMUKJgEJAQ0JBgAJAaEA0AEJASEK2AGZAbcG3gHxAasC5AH5
AUoI6wGxAbsL8QEhAQ0J9wFBAQ0JBgAhAGMAjwMuAAsAzgIuABMA1wIuABsA9gIuACMA/wIuACsA
KAMuADMAKAMuADsAKAMuAEMA/wIuAEsALgMuAFMAKAMuAFsARQNAAGMAjwNBAGMAjwNgAGMAjwNh
AGMAjwNjAGsAjwOAAGMAjwOBAGMAjwOgAGMAjwOhAGMAjwPAAGMAjwPgAGMAjwMAAWMAjwMDAXMA
jwMgAWMAjwMpAXsA9gJAAWMAjwNJAXsA9gJgAWMAjwMhAmMAjwMuAFUAlwAqAawBzAECAAEABAAG
AAYACAAIAAkACQALAAAAdgimAgAAZQemAgAANgKmAgAAlgWqAgAAJgmvAgAAuwCmAgAA8wWzAgAA
CAe3AgAAOgi9AgAANAPDAgAA2wrJAgIAAgADAAEAAwADAAIABAAFAAEABQAFAAIABgAHAAEABwAH
AAIACAAJAAEACQAJAAIACgALAAEACwALAAEAFQANAAEAFgAPAAIAIAARAAIAIwATAAIAJAAVAAEA
JQAVAAIAJgAXABwAJwA9AMkA3wD9AGgBBIAAAAEAAAAAAAAAAAAAAAAADwEAAAQAAAAAAAAAAAAA
AP8BBgEAAAAADgAAAAAAAAAAAAAACAIzCwAAAAAEAAAAAAAAAAAAAAD/ASMGAAAAAAQAAAAAAAAA
AAAAAP8BwQAAAAAADgAAAAAAAAAAAAAACAJnCwAAAAAOAAAAAAAAAAAAAAAIAqgHAAAAAA4AAAAA
AAAAAAAAAAgCywcAAAAAAAAAAAEAAACCCQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAA
SURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24x
MDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAExpc3RgMQBJbnQzMgBLZXlWYWx1ZVBhaXJgMgBE
aWN0aW9uYXJ5YDIAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU3lzdGVtLklPAHNldF9EZXJwTwBTeXN0
ZW0uRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAYWRkS29tbXVuZURhdGEAZ2V0S29tbXVuZURh
dGEAZGF0YQBtc2NvcmxpYgBTQ19lOTBhNjFlZTIyZmY0Y2Y5OGJlZjUxMzc3ZGQ4OTI5YwBTeXN0
ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQATWFya091dHB1dHNGaW5pc2hlZAA8S2lsZGU+a19f
QmFja2luZ0ZpZWxkADxWZXJkaT5rX19CYWNraW5nRmllbGQAPFZhcmlhYmVsbmF2bj5rX19CYWNr
aW5nRmllbGQAPEtvbW11bmVudW1tZXI+a19fQmFja2luZ0ZpZWxkADzDhXI+a19fQmFja2luZ0Zp
ZWxkAFJlYWRUb0VuZABEYkNvbW1hbmQAU3FsQ29tbWFuZABzZXRfTWV0aG9kAFJlcGxhY2UAZGVm
YXVsdEluc3RhbmNlAGdldF9LaWxkZQBzZXRfS2lsZGUAa2lsZGUAQWRkUmFuZ2UARGF0YVRhYmxl
AHdyaXRlVG9UYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBzZXRfRGVzdGluYXRpb25UYWJsZU5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUA
RGF0ZVRpbWUAZGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAdG1wS29t
bXVuZQBzZXRfQ29udGVudFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0
dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEh0dHBXZWJSZXNwb25zZQBHZXRSZXNwb25zZQBD
bG9zZQBEaXNwb3NlAFBhcnNlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvU3RyaW5nAGdldF9WZXJkaQBzZXRfVmVyZGkAdmVyZGkARGVjaW1hbABT
eXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfZTkwYTYxZWUyMmZmNGNmOThiZWY1MTM3N2RkODkyOWMu
ZGxsAERCTnVsbABzZXRfRGVycE9fSXNOdWxsAFNldE51bGwAR2V0UmVzcG9uc2VTdHJlYW0Ac2V0
X0l0ZW0AU3lzdGVtAFRyaW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAERhdGFDb2x1bW4A
RmlyZUluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVj
dGlvbkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24ARGJDb25uZWN0
aW9uAFNxbENvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBGb3JtYXRFeGNlcHRp
b24AU3lzdGVtLkRhdGEuQ29tbW9uAGdldF9WYXJpYWJlbG5hdm4Ac2V0X1ZhcmlhYmVsbmF2bgB2
YXJpYWJlbG5hdm4AQ3VsdHVyZUluZm8AWmVybwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNy
b3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlw
ZWxpbmVXcmFwAENoYXIAU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlv
bk1hbmFnZXIAZ2V0X0tvbW11bmVudW1tZXIAc2V0X0tvbW11bmVudW1tZXIAa29tbXVuZW51bW1l
cgBBU1NTX0tvbW11bmVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAFdyaXRlVG9TZXJ2ZXIAR2V0
RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAZ2V0X8OFcgBzZXRfw4VyAMOlcgBPdXRwdXRJRHMAZGF0
YXMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJlc291cmNlcwBTQ19lOTBhNjFlZTIyZmY0Y2Y5OGJlZjUxMzc3ZGQ4OTI5Yy5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZTkwYTYxZWUyMmZmNGNm
OThiZWY1MTM3N2RkODkyOWMuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhl
cwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb250YWlucwBnZXRfQ29sdW1ucwBD
b25uZWN0aW9ucwBTdHJpbmdTcGxpdE9wdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAGdldF9S
b3dzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AE9iamVjdABTeXN0ZW0uTmV0AFNldEVuZE9m
Um93c2V0AFNwbGl0AGdldF9EZWZhdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABVc2VyQ29tcG9u
ZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQATWljcm9zb2Z0
LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AEh0dHBXZWJSZXF1ZXN0AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AE1vdmVOZXh0AERhdGFSb3cAQWRkUm93AE5l
d1JvdwBnZXRfS2V5AGdldF9Bc3NlbWJseQBTcWxCdWxrQ29weQBFeGVjdXRlTm9uUXVlcnkAb3Bf
RXF1YWxpdHkAAClpAG4AZABpAGsAYQB0AG8AcgBEAGEAdABhAEsAbwBtAG0AdQBuAGUAAEFmAG8A
cgBlAGwAZAByAGUAdQBuAGQAZQByAHMAbwBrAGUAbABzAGUAbgBUAGkAbABmAHIAZQBkAHMAaABl
AHQAAEdmAG8AcgBlAGwAZAByAGUAdQBuAGQAZQByAHMAbwBrAGUAbABzAGUAbgBBAG4AdABhAGwA
bABCAGUAcwB2AGEAcgB0AGUAAFVoAHQAdABwAHMAOgAvAC8AdwB3AHcALgBiAGEAcgBuAGUAaABh
AGcAZQBmAGEAawB0AGEALgBuAG8ALwBhAHAAaQAvAEsAbwBtAG0AdQBuAGUALwAAB0cARQBUAAAh
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AagBzAG8AbgAAAQAFfQAsAABvVQB0AGQAYQBuAG4AaQBu
AGcAcwBkAGkAcgBlAGsAdABvAHIAYQB0AGUAdAAvAEYAbwByAGUAbABkAHIAZQB1AG4AZABlAHIA
cwD4AGsAZQBsAHMAZQAgAGkAIABiAGEAcgBuAGUAaABhAGcAZQABRUYAbwByAGUAbABkAHIAZQB1
AG4AZABlAHIAcwD4AGsAZQBsAHMAZQBuADoAIABUAGkAbABmAHIAZQBkAHMAaABlAHQAAT9GAG8A
cgBlAGwAZAByAGUAdQBuAGQAZQByAHMA+ABrAGUAbABzAGUAbgA6ACAAQgBlAHMAdgBhAHIAdABl
AAEJbgB1AGwAbAAAAy4AAAMsAAALVgBlAHIAZABpAACAoUQARQBMAEUAVABFACAARgBSAE8ATQAg
AFsAZABiAG8AXQAuAFsASwBTAF8AQgBIAEcAMAAyACAARgBvAHIAZQBsAGQAcgBlAHUAbgBkAGUA
cgBzAPgAawBlAGwAcwBlAG4AIABpACAAYgBhAHIAbgBlAGgAYQBnAGUAXQAgAFcASABFAFIARQAg
AMUAcgAgAD0AIAAnADIAMAAyADAAJwABZVsAZABiAG8AXQAuAFsASwBTAF8AQgBIAEcAMAAyACAA
RgBvAHIAZQBsAGQAcgBlAHUAbgBkAGUAcgBzAPgAawBlAGwAcwBlAG4AIABpACAAYgBhAHIAbgBl
AGgAYQBnAGUAXQABGUkATgBTAEUAUgBUACAASQBOAFQATwAgAACAyyAAKABLAG8AbQBtAHUAbgBl
AG4AdQBtAG0AZQByACwAIABWAGEAcgBpAGEAYgBlAGwAbgBhAHYAbgAsACAASwBpAGwAZABlACwA
IABWAGUAcgBkAGkALAAgAMUAcgApACAAVgBBAEwAVQBFAFMAIAAoAEAAcABhAHIAYQBtADEALAAg
AEAAcABhAHIAYQBtADIALAAgAEAAcABhAHIAYQBtADMALAAgAEAAcABhAHIAYQBtADQALAAgAEAA
cABhAHIAYQBtADUAKQABgJ1EAGEAdABhACAAUwBvAHUAcgBjAGUAPQB2AGsALQBzAHgAZAAwAGUA
LQAwADAAMgA7AEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0AUwB0AGEAZwBpAG4AZwBf
AEEAUwBTAFMAOwBJAG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5AD0AdAByAHUA
ZQABG0sAbwBtAG0AdQBuAGUAbgB1AG0AbQBlAHIAABlWAGEAcgBpAGEAYgBlAGwAbgBhAHYAbgAA
C0sAaQBsAGQAZQAABcUAcgABCTEAMQAwADgAAAkzADAAMAA0AAAJMwAwADAANQAACTMAMAAyADQA
AAk0ADIAMAA0AAAJNAA2ADAAMQAACTUAMAAwADEAAAk1ADQAMAAxAAAJMAAzADAAMQAACTEAMQAw
ADMAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAg
AHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUA
IAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1
AHQAIAAwAAAVQwBvAG4AbgBlAGMAdABpAG8AbgAAcVMAQwBfAGUAOQAwAGEANgAxAGUAZQAyADIA
ZgBmADQAYwBmADkAOABiAGUAZgA1ADEAMwA3ADcAZABkADgAOQAyADkAYwAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAFVQ4Ak6xUpGiQsp5wdyIkkABCABAQgDIAAB
BSABARERBCABAQ4GIAEBEYCZChUSRQIOFRJJAQ4GFRJJARIIDgcGFRJJAQ4dDggdDggOBRUSSQEO
BCABAg4GIAEdDh0DBSABARMACwcGHQ4IDg4dDhJRBQACDg4OBgABEoCtDgUgABKAtQUgABKAuQYg
AQESgLkDIAAOCSACHQ4dDhGAyQcgAgETABMBJgcLDg4OET0IFRFVAg4VEkkBDhURWQIOFRJJAQ4V
EV0BDh0OEmECCiAAFRFVAhMAEwEKFRFVAg4VEkkBDgogABURWQITABMBChURWQIOFRJJAQ4EIAAT
AAQgABMBCCAAFRFdARMABRURXQEOBSABDh0DBSACDg4OBQABET0OBSAAEoDNCiAGAQgODg4IEAID
IAACFwcKDg4OEmUSaRURXQESCBIIEm0ScRJ1BgADDg4ODgUgABKA0QgAARKA2RGA3QcgAgEOEoDZ
ByABAR0SgNUGFRFdARIIBCAAEmkFIAIBDhwDBhE9BwACAhE9ET0CBhwFIAASgOkFIAEBEmkGIAIB
DhJtAyAACAUgAQESbQUgAQESZQ4HBRURXQESCBIIAhE9CAogAwESfR0IEoCBBSACAQgcAwcBCAcA
AggSgIEOBSABHQgIBSAAEoD5BiABEoD9DgUgABKAiQUgABKBAQcgAgEOEoEBCLd6XFYZNOCJCImE
Xc2AgMyRAgYOAgYICwYVEkUCDhUSSQEOBwYVEkkBEggDBh0OAwYRTQMGEhgDBhIcAwYSEAQGEoCF
BAYSgJEEBhKAlQMGEiQJIAUBDg4OET0IBCAAET0FIAEBET0JIAEVEkkBDh0OBCABAQIMIAQBCB0I
HRJ9EoCBBiABARKAhQUAABKAkQUAABKAlQYAAQESgJUEAAASJAMAAAEDKAAOBCgAET0DKAAIAygA
AgUoABKAiQUIABKAkQUIABKAlQQIABIkCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ19lOTBhNjFlZTIyZmY0Y2Y5OGJlZjUxMzc3ZGQ4OTI5YwAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAPBKAAAAAAAAAAAAAApLAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8SgAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBlADkA
MABhADYAMQBlAGUAMgAyAGYAZgA0AGMAZgA5ADgAYgBlAGYANQAxADMANwA3AGQAZAA4ADkAMgA5
AGMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGUAOQAwAGEANgAxAGUAZQAyADIAZgBm
ADQAYwBmADkAOABiAGUAZgA1ADEAMwA3ADcAZABkADgAOQAyADkAYwAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZQA5ADAAYQA2ADEAZQBl
ADIAMgBmAGYANABjAGYAOQA4AGIAZQBmADUAMQAzADcANwBkAGQAOAA5ADIAOQBjAC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGUAOQAwAGEANgAxAGUAZQAy
ADIAZgBmADQAYwBmADkAOABiAGUAZgA1ADEAMwA3ADcAZABkADgAOQAyADkAYwAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAHDsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_e90a61ee22ff4cf98bef51377dd8929c</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">03</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task\Script Component 1.Connections[Connection]"
                      connectionManagerID="{E03B5EEF-9A98-4EE4-931D-9D4F8E0460CE}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Staging_ASSS]"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\Script Component 1.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[DerpO]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Sequence Container\Data Flow Task\Script Component 1.Outputs[Output 0].Columns[DerpO]"
                          name="DerpO" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\Data Flow Task.Paths[Output 0]"
                  endId="Package\Sequence Container\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
                  name="Output 0"
                  startId="Package\Sequence Container\Data Flow Task\Script Component 1.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="151,42"
          Id="Package\Sequence Container\Data Flow Task"
          TopLeft="131,68" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="472,253"
          Size="472,296"
          Id="Package\Sequence Container"
          TopLeft="400,149" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Sequence Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="172,42"
          Id="Package\Sequence Container\Data Flow Task\Script Component 1"
          TopLeft="479,129" />
        <NodeLayout
          Size="166,42"
          Id="Package\Sequence Container\Data Flow Task\OLE DB Command"
          TopLeft="510,380" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task.Paths[Output 0]"
          TopLeft="565,171">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,209"
              Start="0,0"
              End="28,201.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,100.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,100.5"
                    Point2="0,104.5"
                    Point3="4,104.5" />
                  <mssgle:LineSegment
                    End="24,104.5" />
                  <mssgle:CubicBezierSegment
                    Point1="24,104.5"
                    Point2="28,104.5"
                    Point3="28,108.5" />
                  <mssgle:LineSegment
                    End="28,201.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>