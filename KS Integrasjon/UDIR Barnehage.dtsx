<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/3/2021 2:28:50 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="VK-C0D0E-360"
  DTS:CreatorName="I04\vk431"
  DTS:DTSID="{90152404-AC77-44FD-AD4F-C654913ED93E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="1044"
  DTS:ObjectName="UDIR Barnehage"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="4"
  DTS:VersionGUID="{171C1EED-12BF-4F1D-BA48-071358AA0C49}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{0C26F0C8-F000-41B4-8F90-7F0B9E09BF4E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{740B3E9F-B2DC-4C28-A080-81E88333AFBE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\Data Flow Task\OLE DB Command"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="OLE DB Command"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Connections[OleDbConnection]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="11">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using System.Data;
using System.IO;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
/// 



[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]

public class Fylker
{
    public string fylkesnavn { get; set; }
    public string fylkesnummer { get; set; }
    public Dictionary<string, Kommuner> kommuner { get; set; }
}

public class Kommuner
{
    public string kommunenavn { get; set; }
    public string kommunenummer { get; set; }
}

public class KommuneData
{
    public int antallBarn { get; set; }
    public int antallBarnPerAnsatt { get; set; }
    public int antallBarnPerBarnehagelaerer { get; set; }
    public int andelAnsatteMedBarneOgUngdomsarbeiderfag { get; set; }
    public int andelAnsatteBarnehagelarer { get; set; }
    public int andelAnsatteTilsvarendeBarnehagelaerer { get; set; }
    public int andelAnsatteMedAnnenHoyereUtdanning { get; set; }
    public int andelAnsatteMedAnnenFagarbeiderutdanning { get; set; }
    public int andelAnsatteMedAnnenBakgrunn { get; set; }
    public int andelAnsatteMedAnnenPedagogiskUtdanning { get; set; }
    public int lekeOgOppholdsarealPerBarn { get; set; }
    public int andelBarnehagerSomOppfyllerPedagognormen { get; set; }
    public int andelBarnehagerSomIkkeOppfyllerPedagognormen { get; set; }
    public int andelBarnehagerSomOppfyllerPedagognormenMedDispensasjon { get; set; }
    public int foreldreundersokelsenUteOgInneMiljo { get; set; }
    public int foreldreundersokelsenBarnetsUtvikling { get; set; }
    public int foreldreundersokelsenBarnetsTrivsel { get; set; }
    public int foreldreundersokelsenInformasjon { get; set; }
    public int foreldreundersokelsenTilfredshet { get; set; }
    public int foreldreundersokelsenAntallInviterte { get; set; }
    public int foreldreundersokelsenAntallBesvarte { get; set; }
    public int foreldreundersokelsenSvarprosent { get; set; }
    public string foreldreundersokelsenArgang { get; set; }
}

public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }



    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_dd5f595f6b564556bda7292965f4933a.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4F084C86-D3F2-45F4-BA11-8253A728FCF2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_dd5f595f6b564556bda7292965f4933a</RootNamespace>
    <AssemblyName>SC_dd5f595f6b564556bda7292965f4933a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dd5f595f6b564556bda7292965f4933a.Properties.Settings.get_Default():SC_dd5f595f6b564556bda7292965f4933a.Properties.Sett" +
    "ings")]

namespace SC_dd5f595f6b564556bda7292965f4933a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_dd5f595f6b564556bda7292965f4933a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_dd5f595f6b564556bda7292965f4933a</msb:DisplayName>
    <msb:ProjectId>{E720FEBB-8261-4870-A6DD-5BD9E1C8E58C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_dd5f595f6b564556bda7292965f4933a.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_dd5f595f6b564556bda7292965f4933a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_dd5f595f6b564556bda7292965f4933a")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dd5f595f6b564556bda7292965f4933a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dd5f595f6b564556bda7292965f4933a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_dd5f595f6b564556bda7292965f4933a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_dd5f595f6b564556bda7292965f4933a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_dd5f595f6b564556bda7292965f4933a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_dd5f595f6b564556bda7292965f4933a.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPu+SGAAAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAkkcA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEBHAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAmCcAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB0
RwAAAAAAAEgAAAACAAUAfCMAAAwjAAABAAAAAAAAAIhGAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCoe
AnsDAAAEKiICA30DAAAEKh4CKBAAAAoqHgJ7BAAABCoiAgN9BAAABCoeAnsFAAAEKiICA30FAAAE
Kh4CewYAAAQqIgIDfQYAAAQqHgJ7BwAABCoiAgN9BwAABCoeAnsIAAAEKiICA30IAAAEKh4CewkA
AAQqIgIDfQkAAAQqHgJ7CgAABCoiAgN9CgAABCoeAnsLAAAEKiICA30LAAAEKh4CewwAAAQqIgID
fQwAAAQqHgJ7DQAABCoiAgN9DQAABCoeAnsOAAAEKiICA30OAAAEKh4Cew8AAAQqIgIDfQ8AAAQq
HgJ7EAAABCoiAgN9EAAABCoeAnsRAAAEKiICA30RAAAEKh4CexIAAAQqIgIDfRIAAAQqHgJ7EwAA
BCoiAgN9EwAABCoeAnsUAAAEKiICA30UAAAEKh4CexUAAAQqIgIDfRUAAAQqHgJ7FgAABCoiAgN9
FgAABCoeAnsXAAAEKiICA30XAAAEKh4CexgAAAQqIgIDfRgAAAQqHgJ7GQAABCoiAgN9GQAABCoe
AnsaAAAEKiICA30aAAAEKh4CexsAAAQqIgIDfRsAAAQqHgJ7HAAABCoiAgN9HAAABCoeAigRAAAK
Kh4CKBIAAAoqBioeAihEAAAGKioCAwQFKBMAAAoqHgIoFAAACioeAigVAAAKKh4CKBYAAAoqfgIo
FwAACgICc0kAAAZ9HQAABAICc0oAAAZ9HgAABCpuAnsfAAAELBICex8AAARvQgAABgIUfR8AAAQq
AAAAEzAFAEkAAAABAAARFgorLgQGlA4EcgEAAHAoGAAACjMZAgUGmgIEBpQoGQAACg4Ec0AAAAZ9
HwAABAYXWAoGAzLOAm9IAAAGAm9FAAAGAihGAAAGKjoCKBAAAAoCA30gAAAEKjoCKBAAAAoCA30h
AAAEKq5+IgAABC0echMAAHDQCgAAAigaAAAKbxsAAApzHAAACoAiAAAEfiIAAAQqGn4jAAAEKh4C
gCMAAAQqGn4kAAAEKh4CKB0AAAoqLnNQAAAGgCQAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAhA0AACN+AADwDQAAyBIAACNTdHJpbmdzAAAAALggAACIAAAAI1VTAEAh
AAAQAAAAI0dVSUQAAABQIQAAvAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAA
AB0AAAALAAAAJAAAAFEAAAAmAAAAHQAAAGQAAAABAAAABQAAAB8AAAA8AAAAAQAAAAQAAAABAAAA
AAA2CwEAAAAAAAYA9wc0EAYAiwg0EAYAQwchEA8AqBAAAAYAcAekDAYA2gekDAYAuwekDAYAcgik
DAYAFwikDAYAMAikDAYAhwekDAYAoge2CgoASwjuBQYAVBFeCwYACwc0EAYAAQBcAAoAow7uBQ4A
lA7uBQoAbg7uBQoA3hHuBQYAJgchEAYAtA5UEAYAEg6PDBIAVAbQChIAVwfQChIAPAZ6DAYADwZe
CwYAygVeCwYAvRKkDAAAAAAOAAAAAAABAAEAAQAQAMQOAAA5AAEAAQABABAAEQ8AADkABAAIAAEA
EABHAAAAOQAGAA0AAQAQAC0MAAAcAB0APAABABAAhg4AAEUAHQBAAAEAEADAEQAAUQAdAEQAAQAQ
AB4RAAA5ACAASQABABAA5hAAADkAIQBKAAAAEABbELcQOQAiAEsAAAEQABURtxBpACQATwABAPcD
XwABAGcEXwABAIUEYgABANoDXwABAEgEXwABAJIDawABAJUFawABAAMFawABAPYAawABAJ8EawAB
AMsEawABAJQBawABAAICawABAOkCawABAMkBawABAK4DawABAK8CawABAHECawABAEkDawABABME
awABAF0BawABADwCawABABcDawABADEFawABAMAAawABAIsAawABAGMFawABADABXwAGAB4RbgAG
AOYQcgAGAIYOdgABAM4RegABAM4RegARAGULfgARACwGggARALoFhgBQIAAAAACGCPQNigABAFgg
AAAAAIYIAw4QAAEAYSAAAAAAhgjvDooAAgBpIAAAAACGCAAPEAACAHIgAAAAAIYIGg+OAAMAeiAA
AAAAhggnD5gAAwCDIAAAAACGGAoQBgAEAIsgAAAAAIYI1A2KAAQAkyAAAAAAhgjkDRAABACcIAAA
AACGCMsOigAFAKQgAAAAAIYI3Q4QAAUAgyAAAAAAhhgKEAYABgCtIAAAAACGCHgNowAGALUgAAAA
AIYIhw0BAAYAviAAAAAAhgh2EqMABwDGIAAAAACGCI4SAQAHAM8gAAAAAIYIyA+jAAgA1yAAAAAA
hgjpDwEACADgIAAAAACGCMYIowAJAOggAAAAAIYI8wgBAAkA8SAAAAAAhgg0D6MACgD5IAAAAACG
CFMPAQAKAAIhAAAAAIYIcg+jAAsACiEAAAAAhgidDwEACwATIQAAAACGCLQJowAMABshAAAAAIYI
3AkBAAwAJCEAAAAAhghcCqMADQAsIQAAAACGCIkKAQANADUhAAAAAIYIOAyjAA4APSEAAAAAhghZ
DAEADgBGIQAAAACGCAQKowAPAE4hAAAAAIYIMAoBAA8AVyEAAAAAhgiWDaMAEABfIQAAAACGCLUN
AQAQAGghAAAAAIYI0wujABEAcCEAAAAAhggADAEAEQB5IQAAAACGCHELowASAIEhAAAAAIYIogsB
ABIAiiEAAAAAhggADaMAEwCSIQAAAACGCDwNAQATAJshAAAAAIYIHg6jABQAoyEAAAAAhghGDgEA
FACsIQAAAACGCGAJowAVALQhAAAAAIYIigkBABUAvSEAAAAAhgjmCqMAFgDFIQAAAACGCA4LAQAW
AM4hAAAAAIYItgyjABcA1iEAAAAAhgjbDAEAFwDfIQAAAACGCFsRowAYAOchAAAAAIYIgBEBABgA
8CEAAAAAhgi5BqMAGQD4IQAAAACGCOIGAQAZAAEiAAAAAIYIaQajABoACSIAAAAAhgiRBgEAGgAS
IgAAAACGCO4RowAbABoiAAAAAIYIExIBABsAIyIAAAAAhgggCYoAHAArIgAAAACGCEAJEAAcAIMg
AAAAAIYYChAGAB0ANCIAAAAAxgCpCAYAHQA8IgAAAADGALQIBgAdAEQiAAAAAMYAQBEGAB0ARiIA
AAAAhhgKEAYAHQBOIgAAAACGGAoQGwAdAFkiAAAAAIYAshIGACAAYSIAAAAAhgClEQYAIABpIgAA
AACGAKgRJQAgAHEiAAAAAIYYChAGACAARCIAAAAAxgEyEQYAIACRIgAAAACBAHcABgAgALAiAAAA
AMYAphKnACAARCIAAAAAxgFAEQYAJAAFIwAAAACGGAoQswAkABQjAAAAAIYYChCzACUAgyAAAAAA
gxgKEAYAJgAjIwAAAACTCLAOuQAmAE8jAAAAAJMIFAa+ACYAViMAAAAAkwggBsMAJgBeIwAAAACW
CLQRyQAnAGUjAAAAAIYYChAGACcAbSMAAAAAkRgQEM4AJwAAAAEAwAgAAAEAwAgAAAEAwAgAAAEA
wAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgA
AAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEA
wAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAwAgAAAEAqQ4AAAIA8BAAAAMAfA4AAAEAOBEA
AAIAFxAAAAMAKhEAAAQAfA4AAAEA5BEAAAEA5BEAAAEAwAgJAAoQAQARAAoQBgAZAAoQCgApAAoQ
EAAxAAoQEAA5AAoQEABBAAoQEABJAAoQEABRAAoQEABZAAoQEABhAAoQEABpAAoQBgB5AAoQBgCp
AAoQBgDJAAoQFQBxAAoQBgChAKkIBgChALQIBgCJAAoQGwCJALISBgCJAKURBgCJAKgRJQChAAoQ
BgChABcALQChAAQRNADZANwFOgDZALkSQQCxAAoQRgDRAAoQBgAgAGsAtAEhAGsAtAEuAAsA8wAu
ABMA/AAuABsAGwEuACMAJAEuACsATQEuADMATQEuADsATQEuAEMAJAEuAEsAUwEuAFMATQEuAFsA
agFAAGsAtAFBAGsAtAFDAGMAtAFgAGsAtAFhAGsAtAGAAGsAtAGBAGsAtAGgAGsAtAGhAGsAtAHA
AGsAtAHBAGsAtAHhAGsAtAEAAWsAtAEBAWsAtAEgAWsAtAEhAWsAtAFAAWsAtAFBAWsAtAFDAXMA
tAFgAWsAtAFhAWsAtAGBAWsAtAGgAWsAtAGhAWsAtAHAAWsAtAHBAWsAtAHgAWsAtAHhAWsAtAEA
AmsAtAEBAmsAtAEgAmsAtAEhAmsAtAFAAmsAtAFBAmsAtAFgAmsAtAFhAmsAtAGAAmsAtAGBAmsA
tAGgAmsAtAGhAmsAtAHAAmsAtAHBAmsAtAHgAmsAtAHhAmsAtAEAA2sAtAEBA2sAtAEgA2sAtAEh
A2sAtAFAA2sAtAFBA2sAtAFgA2sAtAFhA2sAtAGAA2sAtAGBA2sAtAGgA2sAtAGpA3sAGwHAA2sA
tAHJA3sAGwHgA2sAtAEABGsAtAEgBGsAtAFABGsAtAFgBGsAtAGABGsAtAGBBGsAtAGgBGsAtAHA
BGsAtAHgBGsAtAEABWsAtAEgBWsAtAFABWsAtAFgBWsAtAGABWsAtAGgBWsAtAHABWsAtAHgBWsA
tAEABmsAtAEgBmsAtAFABmsAtAFgBmsAtAGABmsAtAGgBmsAtAHABmsAtAHgBmsAtAEAB2sAtAEg
B2sAtAFAB2sAtAEpAAIAAQADAAQABAAGAAoAHQALAB8AAAAHDtIAAAAED9IAAAArD9YAAADoDdIA
AADhDtIAAACLDeAAAACSEuAAAADtD+AAAAD3COAAAABXD+AAAAChD+AAAADgCeAAAACNCuAAAABd
DOAAAAA0CuAAAAC5DeAAAAAEDOAAAACmC+AAAABADeAAAABKDuAAAACOCeAAAAASC+AAAADfDOAA
AACEEeAAAADmBuAAAACVBuAAAAAXEuAAAABECdIAAAC0DuQAAAA0BukAAAC4Ee4AAgABAAMAAQAC
AAMAAgADAAUAAQAEAAUAAgAFAAcAAQAGAAcAAgAIAAkAAQAJAAkAAgAKAAsAAQALAAsAAgANAA0A
AQAOAA0AAgAPAA8AAQAQAA8AAgARABEAAQASABEAAgATABMAAQAUABMAAgAVABUAAQAWABUAAgAX
ABcAAQAYABcAAgAZABkAAQAaABkAAgAbABsAAQAcABsAAgAdAB0AAQAeAB0AAgAfAB8AAQAgAB8A
AgAhACEAAQAiACEAAgAjACMAAQAkACMAAgAlACUAAQAmACUAAgAnACcAAQAoACcAAgApACkAAQAq
ACkAAgArACsAAQAsACsAAgAtAC0AAQAuAC0AAgAvAC8AAQAwAC8AAgAxADEAAQAyADEAAgAzADMA
AQA0ADMAAgA1ADUAAQA2ADUAAgA3ADcAAQA4ADcAAgA5ADkAAQA6ADkAAgBMADsAAgBNAD0AAQBO
AD0AAgBPAD8ABIAAAAEAAAAAAAAAAAAAAAAAIwAAAAQAAAAAAAAAAAAAAE0AUwAAAAAADgAAAAAA
AAAAAAAAVgA4EgAAAAAOAAAAAAAAAAAAAABWAFUSAAAAAAQAAAAAAAAAAAAAAE0AXgsAAAAAAAAA
AAEAAABlEAAAAAAAAABEaWN0aW9uYXJ5YDIAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU0NfZGQ1ZjU5
NWY2YjU2NDU1NmJkYTcyOTI5NjVmNDkzM2EAS29tbXVuZURhdGEAbXNjb3JsaWIAU3lzdGVtLkNv
bGxlY3Rpb25zLkdlbmVyaWMATWFya091dHB1dHNGaW5pc2hlZAA8Zm9yZWxkcmV1bmRlcnNva2Vs
c2VuQW50YWxsQmVzdmFydGU+a19fQmFja2luZ0ZpZWxkADxmb3JlbGRyZXVuZGVyc29rZWxzZW5B
bnRhbGxJbnZpdGVydGU+a19fQmFja2luZ0ZpZWxkADxhbmRlbEFuc2F0dGVNZWRCYXJuZU9nVW5n
ZG9tc2FyYmVpZGVyZmFnPmtfX0JhY2tpbmdGaWVsZAA8Zm9yZWxkcmV1bmRlcnNva2Vsc2VuQXJn
YW5nPmtfX0JhY2tpbmdGaWVsZAA8Zm9yZWxkcmV1bmRlcnNva2Vsc2VuQmFybmV0c1V0dmlrbGlu
Zz5rX19CYWNraW5nRmllbGQAPGFuZGVsQW5zYXR0ZU1lZEFubmVuSG95ZXJlVXRkYW5uaW5nPmtf
X0JhY2tpbmdGaWVsZAA8YW5kZWxBbnNhdHRlTWVkQW5uZW5QZWRhZ29naXNrVXRkYW5uaW5nPmtf
X0JhY2tpbmdGaWVsZAA8YW5kZWxBbnNhdHRlTWVkQW5uZW5GYWdhcmJlaWRlcnV0ZGFubmluZz5r
X19CYWNraW5nRmllbGQAPGZvcmVsZHJldW5kZXJzb2tlbHNlbkJhcm5ldHNUcml2c2VsPmtfX0Jh
Y2tpbmdGaWVsZAA8YW5kZWxCYXJuZWhhZ2VyU29tSWtrZU9wcGZ5bGxlclBlZGFnb2dub3JtZW4+
a19fQmFja2luZ0ZpZWxkADxhbmRlbEJhcm5laGFnZXJTb21PcHBmeWxsZXJQZWRhZ29nbm9ybWVu
PmtfX0JhY2tpbmdGaWVsZAA8YW5kZWxBbnNhdHRlTWVkQW5uZW5CYWtncnVubj5rX19CYWNraW5n
RmllbGQAPGZvcmVsZHJldW5kZXJzb2tlbHNlbkluZm9ybWFzam9uPmtfX0JhY2tpbmdGaWVsZAA8
YW5kZWxCYXJuZWhhZ2VyU29tT3BwZnlsbGVyUGVkYWdvZ25vcm1lbk1lZERpc3BlbnNhc2pvbj5r
X19CYWNraW5nRmllbGQAPGFudGFsbEJhcm4+a19fQmFja2luZ0ZpZWxkADxsZWtlT2dPcHBob2xk
c2FyZWFsUGVyQmFybj5rX19CYWNraW5nRmllbGQAPGtvbW11bmVuYXZuPmtfX0JhY2tpbmdGaWVs
ZAA8Znlsa2VzbmF2bj5rX19CYWNraW5nRmllbGQAPGZvcmVsZHJldW5kZXJzb2tlbHNlblV0ZU9n
SW5uZU1pbGpvPmtfX0JhY2tpbmdGaWVsZAA8a29tbXVuZW51bW1lcj5rX19CYWNraW5nRmllbGQA
PGZ5bGtlc251bW1lcj5rX19CYWNraW5nRmllbGQAPGtvbW11bmVyPmtfX0JhY2tpbmdGaWVsZAA8
YW5kZWxBbnNhdHRlQmFybmVoYWdlbGFyZXI+a19fQmFja2luZ0ZpZWxkADxhbmRlbEFuc2F0dGVU
aWxzdmFyZW5kZUJhcm5laGFnZWxhZXJlcj5rX19CYWNraW5nRmllbGQAPGFudGFsbEJhcm5QZXJC
YXJuZWhhZ2VsYWVyZXI+a19fQmFja2luZ0ZpZWxkADxmb3JlbGRyZXVuZGVyc29rZWxzZW5UaWxm
cmVkc2hldD5rX19CYWNraW5nRmllbGQAPGZvcmVsZHJldW5kZXJzb2tlbHNlblN2YXJwcm9zZW50
PmtfX0JhY2tpbmdGaWVsZAA8YW50YWxsQmFyblBlckFuc2F0dD5rX19CYWNraW5nRmllbGQAZGVm
YXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AGdldF9mb3JlbGRyZXVuZGVyc29rZWxzZW5BbnRhbGxCZXN2YXJ0ZQBzZXRfZm9yZWxkcmV1bmRl
cnNva2Vsc2VuQW50YWxsQmVzdmFydGUAZ2V0X2ZvcmVsZHJldW5kZXJzb2tlbHNlbkFudGFsbElu
dml0ZXJ0ZQBzZXRfZm9yZWxkcmV1bmRlcnNva2Vsc2VuQW50YWxsSW52aXRlcnRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAZ2V0X2FuZGVsQW5zYXR0ZU1lZEJh
cm5lT2dVbmdkb21zYXJiZWlkZXJmYWcAc2V0X2FuZGVsQW5zYXR0ZU1lZEJhcm5lT2dVbmdkb21z
YXJiZWlkZXJmYWcAZ2V0X2ZvcmVsZHJldW5kZXJzb2tlbHNlbkFyZ2FuZwBzZXRfZm9yZWxkcmV1
bmRlcnNva2Vsc2VuQXJnYW5nAGdldF9mb3JlbGRyZXVuZGVyc29rZWxzZW5CYXJuZXRzVXR2aWts
aW5nAHNldF9mb3JlbGRyZXVuZGVyc29rZWxzZW5CYXJuZXRzVXR2aWtsaW5nAGdldF9hbmRlbEFu
c2F0dGVNZWRBbm5lbkhveWVyZVV0ZGFubmluZwBzZXRfYW5kZWxBbnNhdHRlTWVkQW5uZW5Ib3ll
cmVVdGRhbm5pbmcAZ2V0X2FuZGVsQW5zYXR0ZU1lZEFubmVuUGVkYWdvZ2lza1V0ZGFubmluZwBz
ZXRfYW5kZWxBbnNhdHRlTWVkQW5uZW5QZWRhZ29naXNrVXRkYW5uaW5nAGdldF9hbmRlbEFuc2F0
dGVNZWRBbm5lbkZhZ2FyYmVpZGVydXRkYW5uaW5nAHNldF9hbmRlbEFuc2F0dGVNZWRBbm5lbkZh
Z2FyYmVpZGVydXRkYW5uaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAGdldF9mb3JlbGRyZXVuZGVyc29rZWxzZW5CYXJuZXRzVHJpdnNlbABzZXRfZm9y
ZWxkcmV1bmRlcnNva2Vsc2VuQmFybmV0c1RyaXZzZWwAU0NfZGQ1ZjU5NWY2YjU2NDU1NmJkYTcy
OTI5NjVmNDkzM2EuZGxsAFN5c3RlbQByZXNvdXJjZU1hbgBnZXRfYW5kZWxCYXJuZWhhZ2VyU29t
SWtrZU9wcGZ5bGxlclBlZGFnb2dub3JtZW4Ac2V0X2FuZGVsQmFybmVoYWdlclNvbUlra2VPcHBm
eWxsZXJQZWRhZ29nbm9ybWVuAGdldF9hbmRlbEJhcm5laGFnZXJTb21PcHBmeWxsZXJQZWRhZ29n
bm9ybWVuAHNldF9hbmRlbEJhcm5laGFnZXJTb21PcHBmeWxsZXJQZWRhZ29nbm9ybWVuAFNjcmlw
dE1haW4AZ2V0X2FuZGVsQW5zYXR0ZU1lZEFubmVuQmFrZ3J1bm4Ac2V0X2FuZGVsQW5zYXR0ZU1l
ZEFubmVuQmFrZ3J1bm4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJlZmxlY3Rpb24AZ2V0X2ZvcmVsZHJldW5kZXJzb2tlbHNlbkluZm9ybWFzam9uAHNl
dF9mb3JlbGRyZXVuZGVyc29rZWxzZW5JbmZvcm1hc2pvbgBnZXRfYW5kZWxCYXJuZWhhZ2VyU29t
T3BwZnlsbGVyUGVkYWdvZ25vcm1lbk1lZERpc3BlbnNhc2pvbgBzZXRfYW5kZWxCYXJuZWhhZ2Vy
U29tT3BwZnlsbGVyUGVkYWdvZ25vcm1lbk1lZERpc3BlbnNhc2pvbgBnZXRfYW50YWxsQmFybgBz
ZXRfYW50YWxsQmFybgBnZXRfbGVrZU9nT3BwaG9sZHNhcmVhbFBlckJhcm4Ac2V0X2xla2VPZ09w
cGhvbGRzYXJlYWxQZXJCYXJuAGdldF9rb21tdW5lbmF2bgBzZXRfa29tbXVuZW5hdm4AZ2V0X2Z5
bGtlc25hdm4Ac2V0X2Z5bGtlc25hdm4AQ3VsdHVyZUluZm8AZ2V0X2ZvcmVsZHJldW5kZXJzb2tl
bHNlblV0ZU9nSW5uZU1pbGpvAHNldF9mb3JlbGRyZXVuZGVyc29rZWxzZW5VdGVPZ0lubmVNaWxq
bwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAEZ5bGtlcgBnZXRfa29tbXVuZW51bW1lcgBz
ZXRfa29tbXVuZW51bW1lcgBnZXRfZnlsa2VzbnVtbWVyAHNldF9meWxrZXNudW1tZXIAS29tbXVu
ZXIAZ2V0X2tvbW11bmVyAHNldF9rb21tdW5lcgBnZXRfYW5kZWxBbnNhdHRlQmFybmVoYWdlbGFy
ZXIAc2V0X2FuZGVsQW5zYXR0ZUJhcm5laGFnZWxhcmVyAGdldF9hbmRlbEFuc2F0dGVUaWxzdmFy
ZW5kZUJhcm5laGFnZWxhZXJlcgBzZXRfYW5kZWxBbnNhdHRlVGlsc3ZhcmVuZGVCYXJuZWhhZ2Vs
YWVyZXIAZ2V0X2FudGFsbEJhcm5QZXJCYXJuZWhhZ2VsYWVyZXIAc2V0X2FudGFsbEJhcm5QZXJC
YXJuZWhhZ2VsYWVyZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2RkNWY1
OTVmNmI1NjQ1NTZiZGE3MjkyOTY1ZjQ5MzNhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTQ19kZDVmNTk1ZjZiNTY0NTU2YmRhNzI5Mjk2NWY0OTMzYS5Qcm9w
ZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0
dGluZ3MAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJv
d3MAT2JqZWN0AGdldF9mb3JlbGRyZXVuZGVyc29rZWxzZW5UaWxmcmVkc2hldABzZXRfZm9yZWxk
cmV1bmRlcnNva2Vsc2VuVGlsZnJlZHNoZXQAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNl
ckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9mb3JlbGRyZXVu
ZGVyc29rZWxzZW5TdmFycHJvc2VudABzZXRfZm9yZWxkcmV1bmRlcnNva2Vsc2VuU3ZhcnByb3Nl
bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVs
aW5lSG9zdABnZXRfYW50YWxsQmFyblBlckFuc2F0dABzZXRfYW50YWxsQmFyblBlckFuc2F0dABQ
cmltZU91dHB1dABBZGRSb3cAZ2V0X0Fzc2VtYmx5AAAAABFPAHUAdABwAHUAdAAgADAAAHFTAEMA
XwBkAGQANQBmADUAOQA1AGYANgBiADUANgA0ADUANQA2AGIAZABhADcAMgA5ADIAOQA2ADUAZgA0
ADkAMwAzAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAEJR
ZsaAgQZIu255VKuHdG0ABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEJIAMBEkkdCBJNAyAAAgMH
AQgGAAIIEk0OBSABHQgIBgABEm0RcQQgABJ1BiACAQ4SdQi3elxWGTTgiQiJhF3NgIDMkQIGDggG
FRJBAg4SDAIGCAMGEiADBhIkAwYSGAMGElEDBhJZAwYSXQMGEiwDIAAOCSAAFRJBAg4SDAogAQEV
EkECDhIMAyAACAsgBAEIHQgdEkkSTQUgAQESUQQAABJZBAAAEl0FAAEBEl0EAAASLAMAAAEDKAAO
CSgAFRJBAg4SDAMoAAgECAASWQQIABJdBAgAEiwIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2RkNWY1OTVmNmI1NjQ1NTZiZGE3MjkyOTY1ZjQ5
MzNhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAaEcAAAAAAAAAAAAAgkcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHRH
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGQA
ZAA1AGYANQA5ADUAZgA2AGIANQA2ADQANQA1ADYAYgBkAGEANwAyADkAMgA5ADYANQBmADQAOQAz
ADMAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZABkADUAZgA1ADkANQBmADYAYgA1
ADYANAA1ADUANgBiAGQAYQA3ADIAOQAyADkANgA1AGYANAA5ADMAMwBhAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBkAGQANQBmADUAOQA1
AGYANgBiADUANgA0ADUANQA2AGIAZABhADcAMgA5ADIAOQA2ADUAZgA0ADkAMwAzAGEALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZABkADUAZgA1ADkANQBm
ADYAYgA1ADYANAA1ADUANgBiAGQAYQA3ADIAOQAyADkANgA1AGYANAA5ADMAMwBhAAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACUNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_dd5f595f6b564556bda7292965f4933a</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">A3</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\Data Flow Task.Paths[Output 0]"
                  endId="Package\Sequence Container\Data Flow Task\OLE DB Command.Inputs[OLE DB Command Input]"
                  name="Output 0"
                  startId="Package\Sequence Container\Data Flow Task\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="151,42"
          Id="Package\Sequence Container\Data Flow Task"
          TopLeft="131,68" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="472,253"
          Size="472,296"
          Id="Package\Sequence Container"
          TopLeft="400,149" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Sequence Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="163,42"
          Id="Package\Sequence Container\Data Flow Task\Script Component"
          TopLeft="503,160" />
        <NodeLayout
          Size="166,42"
          Id="Package\Sequence Container\Data Flow Task\OLE DB Command"
          TopLeft="510,380" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task.Paths[Output 0]"
          TopLeft="584.5,202">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,178"
              Start="0,0"
              End="8.5,170.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,85" />
                  <mssgle:CubicBezierSegment
                    Point1="0,85"
                    Point2="0,89"
                    Point3="4,89" />
                  <mssgle:LineSegment
                    End="4.5,89" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,89"
                    Point2="8.5,89"
                    Point3="8.5,93" />
                  <mssgle:LineSegment
                    End="8.5,170.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>